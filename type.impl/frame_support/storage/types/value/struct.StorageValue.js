(function() {var type_impls = {
"chain_spec_guide_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#252-254\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#262-266\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"chain_spec_guide_runtime::barrels::barrel_foo::ProcessedEnumValue","chain_spec_guide_runtime::barrels::barrel_foo::SomeInteger"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#272-278\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#280-284\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    deprecation_status: <a class=\"enum\" href=\"sp_metadata_ir/types/enum.DeprecationStatusIR.html\" title=\"enum sp_metadata_ir::types::DeprecationStatusIR\">DeprecationStatusIR</a>,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","chain_spec_guide_runtime::barrels::barrel_foo::ProcessedEnumValue","chain_spec_guide_runtime::barrels::barrel_foo::SomeInteger"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#300-306\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#308\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","chain_spec_guide_runtime::barrels::barrel_foo::ProcessedEnumValue","chain_spec_guide_runtime::barrels::barrel_foo::SomeInteger"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","chain_spec_guide_runtime::barrels::barrel_foo::ProcessedEnumValue","chain_spec_guide_runtime::barrels::barrel_foo::SomeInteger"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#320-326\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#328\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","chain_spec_guide_runtime::barrels::barrel_foo::ProcessedEnumValue","chain_spec_guide_runtime::barrels::barrel_foo::SomeInteger"]],
"cumulus_barrel_dmp_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"cumulus_barrel_dmp_queue::barrel::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","cumulus_barrel_dmp_queue::barrel::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","cumulus_barrel_dmp_queue::barrel::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","cumulus_barrel_dmp_queue::barrel::MigrationStatus"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","cumulus_barrel_dmp_queue::barrel::MigrationStatus"]],
"cumulus_barrel_synochain_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"cumulus_barrel_synochain_system::barrel::UnincludedSegment","cumulus_barrel_synochain_system::barrel::AggregatedUnincludedSegment","cumulus_barrel_synochain_system::barrel::PendingValidationCode","cumulus_barrel_synochain_system::barrel::NewValidationCode","cumulus_barrel_synochain_system::barrel::ValidationData","cumulus_barrel_synochain_system::barrel::DidSetValidationCode","cumulus_barrel_synochain_system::barrel::LastRelayChainBlockNumber","cumulus_barrel_synochain_system::barrel::UpgradeRestrictionSignal","cumulus_barrel_synochain_system::barrel::UpgradeGoAhead","cumulus_barrel_synochain_system::barrel::RelayStateProof","cumulus_barrel_synochain_system::barrel::RelevantMessagingState","cumulus_barrel_synochain_system::barrel::HostConfiguration","cumulus_barrel_synochain_system::barrel::LastDmqMqcHead","cumulus_barrel_synochain_system::barrel::LastHrmpMqcHeads","cumulus_barrel_synochain_system::barrel::ProcessedDownwardMessages","cumulus_barrel_synochain_system::barrel::HrmpWatermark","cumulus_barrel_synochain_system::barrel::HrmpOutboundMessages","cumulus_barrel_synochain_system::barrel::UpwardMessages","cumulus_barrel_synochain_system::barrel::PendingUpwardMessages","cumulus_barrel_synochain_system::barrel::UpwardDeliveryFeeFactor","cumulus_barrel_synochain_system::barrel::AnnouncedHrmpMessagesPerCandidate","cumulus_barrel_synochain_system::barrel::ReservedXcmpWeightOverride","cumulus_barrel_synochain_system::barrel::ReservedDmpWeightOverride","cumulus_barrel_synochain_system::barrel::CustomValidationHeadData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","cumulus_barrel_synochain_system::barrel::UnincludedSegment","cumulus_barrel_synochain_system::barrel::AggregatedUnincludedSegment","cumulus_barrel_synochain_system::barrel::PendingValidationCode","cumulus_barrel_synochain_system::barrel::NewValidationCode","cumulus_barrel_synochain_system::barrel::ValidationData","cumulus_barrel_synochain_system::barrel::DidSetValidationCode","cumulus_barrel_synochain_system::barrel::LastRelayChainBlockNumber","cumulus_barrel_synochain_system::barrel::UpgradeRestrictionSignal","cumulus_barrel_synochain_system::barrel::UpgradeGoAhead","cumulus_barrel_synochain_system::barrel::RelayStateProof","cumulus_barrel_synochain_system::barrel::RelevantMessagingState","cumulus_barrel_synochain_system::barrel::HostConfiguration","cumulus_barrel_synochain_system::barrel::LastDmqMqcHead","cumulus_barrel_synochain_system::barrel::LastHrmpMqcHeads","cumulus_barrel_synochain_system::barrel::ProcessedDownwardMessages","cumulus_barrel_synochain_system::barrel::HrmpWatermark","cumulus_barrel_synochain_system::barrel::HrmpOutboundMessages","cumulus_barrel_synochain_system::barrel::UpwardMessages","cumulus_barrel_synochain_system::barrel::PendingUpwardMessages","cumulus_barrel_synochain_system::barrel::UpwardDeliveryFeeFactor","cumulus_barrel_synochain_system::barrel::AnnouncedHrmpMessagesPerCandidate","cumulus_barrel_synochain_system::barrel::ReservedXcmpWeightOverride","cumulus_barrel_synochain_system::barrel::ReservedDmpWeightOverride","cumulus_barrel_synochain_system::barrel::CustomValidationHeadData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","cumulus_barrel_synochain_system::barrel::UnincludedSegment","cumulus_barrel_synochain_system::barrel::AggregatedUnincludedSegment","cumulus_barrel_synochain_system::barrel::PendingValidationCode","cumulus_barrel_synochain_system::barrel::NewValidationCode","cumulus_barrel_synochain_system::barrel::ValidationData","cumulus_barrel_synochain_system::barrel::DidSetValidationCode","cumulus_barrel_synochain_system::barrel::LastRelayChainBlockNumber","cumulus_barrel_synochain_system::barrel::UpgradeRestrictionSignal","cumulus_barrel_synochain_system::barrel::UpgradeGoAhead","cumulus_barrel_synochain_system::barrel::RelayStateProof","cumulus_barrel_synochain_system::barrel::RelevantMessagingState","cumulus_barrel_synochain_system::barrel::HostConfiguration","cumulus_barrel_synochain_system::barrel::LastDmqMqcHead","cumulus_barrel_synochain_system::barrel::LastHrmpMqcHeads","cumulus_barrel_synochain_system::barrel::ProcessedDownwardMessages","cumulus_barrel_synochain_system::barrel::HrmpWatermark","cumulus_barrel_synochain_system::barrel::HrmpOutboundMessages","cumulus_barrel_synochain_system::barrel::UpwardMessages","cumulus_barrel_synochain_system::barrel::PendingUpwardMessages","cumulus_barrel_synochain_system::barrel::UpwardDeliveryFeeFactor","cumulus_barrel_synochain_system::barrel::AnnouncedHrmpMessagesPerCandidate","cumulus_barrel_synochain_system::barrel::ReservedXcmpWeightOverride","cumulus_barrel_synochain_system::barrel::ReservedDmpWeightOverride","cumulus_barrel_synochain_system::barrel::CustomValidationHeadData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","cumulus_barrel_synochain_system::barrel::UnincludedSegment","cumulus_barrel_synochain_system::barrel::AggregatedUnincludedSegment","cumulus_barrel_synochain_system::barrel::PendingValidationCode","cumulus_barrel_synochain_system::barrel::NewValidationCode","cumulus_barrel_synochain_system::barrel::ValidationData","cumulus_barrel_synochain_system::barrel::DidSetValidationCode","cumulus_barrel_synochain_system::barrel::LastRelayChainBlockNumber","cumulus_barrel_synochain_system::barrel::UpgradeRestrictionSignal","cumulus_barrel_synochain_system::barrel::UpgradeGoAhead","cumulus_barrel_synochain_system::barrel::RelayStateProof","cumulus_barrel_synochain_system::barrel::RelevantMessagingState","cumulus_barrel_synochain_system::barrel::HostConfiguration","cumulus_barrel_synochain_system::barrel::LastDmqMqcHead","cumulus_barrel_synochain_system::barrel::LastHrmpMqcHeads","cumulus_barrel_synochain_system::barrel::ProcessedDownwardMessages","cumulus_barrel_synochain_system::barrel::HrmpWatermark","cumulus_barrel_synochain_system::barrel::HrmpOutboundMessages","cumulus_barrel_synochain_system::barrel::UpwardMessages","cumulus_barrel_synochain_system::barrel::PendingUpwardMessages","cumulus_barrel_synochain_system::barrel::UpwardDeliveryFeeFactor","cumulus_barrel_synochain_system::barrel::AnnouncedHrmpMessagesPerCandidate","cumulus_barrel_synochain_system::barrel::ReservedXcmpWeightOverride","cumulus_barrel_synochain_system::barrel::ReservedDmpWeightOverride","cumulus_barrel_synochain_system::barrel::CustomValidationHeadData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","cumulus_barrel_synochain_system::barrel::UnincludedSegment","cumulus_barrel_synochain_system::barrel::AggregatedUnincludedSegment","cumulus_barrel_synochain_system::barrel::PendingValidationCode","cumulus_barrel_synochain_system::barrel::NewValidationCode","cumulus_barrel_synochain_system::barrel::ValidationData","cumulus_barrel_synochain_system::barrel::DidSetValidationCode","cumulus_barrel_synochain_system::barrel::LastRelayChainBlockNumber","cumulus_barrel_synochain_system::barrel::UpgradeRestrictionSignal","cumulus_barrel_synochain_system::barrel::UpgradeGoAhead","cumulus_barrel_synochain_system::barrel::RelayStateProof","cumulus_barrel_synochain_system::barrel::RelevantMessagingState","cumulus_barrel_synochain_system::barrel::HostConfiguration","cumulus_barrel_synochain_system::barrel::LastDmqMqcHead","cumulus_barrel_synochain_system::barrel::LastHrmpMqcHeads","cumulus_barrel_synochain_system::barrel::ProcessedDownwardMessages","cumulus_barrel_synochain_system::barrel::HrmpWatermark","cumulus_barrel_synochain_system::barrel::HrmpOutboundMessages","cumulus_barrel_synochain_system::barrel::UpwardMessages","cumulus_barrel_synochain_system::barrel::PendingUpwardMessages","cumulus_barrel_synochain_system::barrel::UpwardDeliveryFeeFactor","cumulus_barrel_synochain_system::barrel::AnnouncedHrmpMessagesPerCandidate","cumulus_barrel_synochain_system::barrel::ReservedXcmpWeightOverride","cumulus_barrel_synochain_system::barrel::ReservedDmpWeightOverride","cumulus_barrel_synochain_system::barrel::CustomValidationHeadData"]],
"cumulus_barrel_xcmp_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"cumulus_barrel_xcmp_queue::barrel::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","cumulus_barrel_xcmp_queue::barrel::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","cumulus_barrel_xcmp_queue::barrel::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","cumulus_barrel_xcmp_queue::barrel::InboundXcmpSuspended"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","cumulus_barrel_xcmp_queue::barrel::InboundXcmpSuspended"]],
"cumulus_test_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#252-254\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#262-266\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"cumulus_test_runtime::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#272-278\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#280-284\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    deprecation_status: <a class=\"enum\" href=\"sp_metadata_ir/types/enum.DeprecationStatusIR.html\" title=\"enum sp_metadata_ir::types::DeprecationStatusIR\">DeprecationStatusIR</a>,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","cumulus_test_runtime::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#300-306\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#308\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","cumulus_test_runtime::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","cumulus_test_runtime::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#320-326\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#328\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","cumulus_test_runtime::Now"]],
"emulated_integration_tests_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Decode.html\" title=\"trait emulated_integration_tests_common::impls::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Encode.html\" title=\"trait emulated_integration_tests_common::impls::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Encode.html\" title=\"trait emulated_integration_tests_common::impls::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestsList","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequestsList"]],
"frame_support_test_barrel":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"frame_support_test_barrel::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","frame_support_test_barrel::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","frame_support_test_barrel::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","frame_support_test_barrel::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","frame_support_test_barrel::barrel::Value"]],
"frame_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"frame_system::barrel::InherentsApplied","frame_system::barrel::BlockWeight","frame_system::barrel::AllExtrinsicsLen","frame_system::barrel::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","frame_system::barrel::InherentsApplied","frame_system::barrel::BlockWeight","frame_system::barrel::AllExtrinsicsLen","frame_system::barrel::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","frame_system::barrel::InherentsApplied","frame_system::barrel::BlockWeight","frame_system::barrel::AllExtrinsicsLen","frame_system::barrel::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","frame_system::barrel::InherentsApplied","frame_system::barrel::BlockWeight","frame_system::barrel::AllExtrinsicsLen","frame_system::barrel::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","frame_system::barrel::InherentsApplied","frame_system::barrel::BlockWeight","frame_system::barrel::AllExtrinsicsLen","frame_system::barrel::LastRuntimeUpgrade"]],
"barrel_alliance":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_alliance::barrel::Rule","barrel_alliance::barrel::Announcements","barrel_alliance::barrel::UnscrupulousAccounts","barrel_alliance::barrel::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_alliance::barrel::Rule","barrel_alliance::barrel::Announcements","barrel_alliance::barrel::UnscrupulousAccounts","barrel_alliance::barrel::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_alliance::barrel::Rule","barrel_alliance::barrel::Announcements","barrel_alliance::barrel::UnscrupulousAccounts","barrel_alliance::barrel::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_alliance::barrel::Rule","barrel_alliance::barrel::Announcements","barrel_alliance::barrel::UnscrupulousAccounts","barrel_alliance::barrel::UnscrupulousWebsites"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_alliance::barrel::Rule","barrel_alliance::barrel::Announcements","barrel_alliance::barrel::UnscrupulousAccounts","barrel_alliance::barrel::UnscrupulousWebsites"]],
"barrel_asset_conversion":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_asset_conversion::barrel::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_asset_conversion::barrel::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_asset_conversion::barrel::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_asset_conversion::barrel::NextPoolAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_asset_conversion::barrel::NextPoolAssetId"]],
"barrel_assets":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_assets::barrel::NextAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_assets::barrel::NextAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_assets::barrel::NextAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_assets::barrel::NextAssetId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_assets::barrel::NextAssetId"]],
"barrel_aura":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_aura::barrel::Authorities","barrel_aura::barrel::CurrentSlot"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_aura::barrel::Authorities","barrel_aura::barrel::CurrentSlot"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_aura::barrel::Authorities","barrel_aura::barrel::CurrentSlot"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_aura::barrel::Authorities","barrel_aura::barrel::CurrentSlot"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_aura::barrel::Authorities","barrel_aura::barrel::CurrentSlot"]],
"barrel_babe":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_babe::barrel::EpochIndex","barrel_babe::barrel::Authorities","barrel_babe::barrel::GenesisSlot","barrel_babe::barrel::CurrentSlot","barrel_babe::barrel::Randomness","barrel_babe::barrel::PendingEpochConfigChange","barrel_babe::barrel::NextRandomness","barrel_babe::barrel::NextAuthorities","barrel_babe::barrel::SegmentIndex","barrel_babe::barrel::Initialized","barrel_babe::barrel::AuthorVrfRandomness","barrel_babe::barrel::EpochStart","barrel_babe::barrel::Lateness","barrel_babe::barrel::EpochConfig","barrel_babe::barrel::NextEpochConfig","barrel_babe::barrel::SkippedEpochs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_babe::barrel::EpochIndex","barrel_babe::barrel::Authorities","barrel_babe::barrel::GenesisSlot","barrel_babe::barrel::CurrentSlot","barrel_babe::barrel::Randomness","barrel_babe::barrel::PendingEpochConfigChange","barrel_babe::barrel::NextRandomness","barrel_babe::barrel::NextAuthorities","barrel_babe::barrel::SegmentIndex","barrel_babe::barrel::Initialized","barrel_babe::barrel::AuthorVrfRandomness","barrel_babe::barrel::EpochStart","barrel_babe::barrel::Lateness","barrel_babe::barrel::EpochConfig","barrel_babe::barrel::NextEpochConfig","barrel_babe::barrel::SkippedEpochs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_babe::barrel::EpochIndex","barrel_babe::barrel::Authorities","barrel_babe::barrel::GenesisSlot","barrel_babe::barrel::CurrentSlot","barrel_babe::barrel::Randomness","barrel_babe::barrel::PendingEpochConfigChange","barrel_babe::barrel::NextRandomness","barrel_babe::barrel::NextAuthorities","barrel_babe::barrel::SegmentIndex","barrel_babe::barrel::Initialized","barrel_babe::barrel::AuthorVrfRandomness","barrel_babe::barrel::EpochStart","barrel_babe::barrel::Lateness","barrel_babe::barrel::EpochConfig","barrel_babe::barrel::NextEpochConfig","barrel_babe::barrel::SkippedEpochs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_babe::barrel::EpochIndex","barrel_babe::barrel::Authorities","barrel_babe::barrel::GenesisSlot","barrel_babe::barrel::CurrentSlot","barrel_babe::barrel::Randomness","barrel_babe::barrel::PendingEpochConfigChange","barrel_babe::barrel::NextRandomness","barrel_babe::barrel::NextAuthorities","barrel_babe::barrel::SegmentIndex","barrel_babe::barrel::Initialized","barrel_babe::barrel::AuthorVrfRandomness","barrel_babe::barrel::EpochStart","barrel_babe::barrel::Lateness","barrel_babe::barrel::EpochConfig","barrel_babe::barrel::NextEpochConfig","barrel_babe::barrel::SkippedEpochs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_babe::barrel::EpochIndex","barrel_babe::barrel::Authorities","barrel_babe::barrel::GenesisSlot","barrel_babe::barrel::CurrentSlot","barrel_babe::barrel::Randomness","barrel_babe::barrel::PendingEpochConfigChange","barrel_babe::barrel::NextRandomness","barrel_babe::barrel::NextAuthorities","barrel_babe::barrel::SegmentIndex","barrel_babe::barrel::Initialized","barrel_babe::barrel::AuthorVrfRandomness","barrel_babe::barrel::EpochStart","barrel_babe::barrel::Lateness","barrel_babe::barrel::EpochConfig","barrel_babe::barrel::NextEpochConfig","barrel_babe::barrel::SkippedEpochs"]],
"barrel_balances":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_balances::barrel::TotalIssuance","barrel_balances::barrel::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_balances::barrel::TotalIssuance","barrel_balances::barrel::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_balances::barrel::TotalIssuance","barrel_balances::barrel::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_balances::barrel::TotalIssuance","barrel_balances::barrel::InactiveIssuance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_balances::barrel::TotalIssuance","barrel_balances::barrel::InactiveIssuance"]],
"barrel_beefy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_beefy::barrel::Authorities","barrel_beefy::barrel::ValidatorSetId","barrel_beefy::barrel::NextAuthorities","barrel_beefy::barrel::GenesisBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_beefy::barrel::Authorities","barrel_beefy::barrel::ValidatorSetId","barrel_beefy::barrel::NextAuthorities","barrel_beefy::barrel::GenesisBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_beefy::barrel::Authorities","barrel_beefy::barrel::ValidatorSetId","barrel_beefy::barrel::NextAuthorities","barrel_beefy::barrel::GenesisBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_beefy::barrel::Authorities","barrel_beefy::barrel::ValidatorSetId","barrel_beefy::barrel::NextAuthorities","barrel_beefy::barrel::GenesisBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_beefy::barrel::Authorities","barrel_beefy::barrel::ValidatorSetId","barrel_beefy::barrel::NextAuthorities","barrel_beefy::barrel::GenesisBlock"]],
"barrel_beefy_mmr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_beefy_mmr::barrel::BeefyAuthorities","barrel_beefy_mmr::barrel::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_beefy_mmr::barrel::BeefyAuthorities","barrel_beefy_mmr::barrel::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_beefy_mmr::barrel::BeefyAuthorities","barrel_beefy_mmr::barrel::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_beefy_mmr::barrel::BeefyAuthorities","barrel_beefy_mmr::barrel::BeefyNextAuthorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_beefy_mmr::barrel::BeefyAuthorities","barrel_beefy_mmr::barrel::BeefyNextAuthorities"]],
"barrel_bounties":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bounties::barrel::BountyCount","barrel_bounties::barrel::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bounties::barrel::BountyCount","barrel_bounties::barrel::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bounties::barrel::BountyCount","barrel_bounties::barrel::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bounties::barrel::BountyCount","barrel_bounties::barrel::BountyApprovals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bounties::barrel::BountyCount","barrel_bounties::barrel::BountyApprovals"]],
"barrel_bridge_beefy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_beefy::barrel::RequestCount","barrel_bridge_beefy::barrel::ImportedCommitmentsInfo","barrel_bridge_beefy::barrel::CurrentAuthoritySetInfo","barrel_bridge_beefy::barrel::BarrelOwner","barrel_bridge_beefy::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_beefy::barrel::RequestCount","barrel_bridge_beefy::barrel::ImportedCommitmentsInfo","barrel_bridge_beefy::barrel::CurrentAuthoritySetInfo","barrel_bridge_beefy::barrel::BarrelOwner","barrel_bridge_beefy::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_beefy::barrel::RequestCount","barrel_bridge_beefy::barrel::ImportedCommitmentsInfo","barrel_bridge_beefy::barrel::CurrentAuthoritySetInfo","barrel_bridge_beefy::barrel::BarrelOwner","barrel_bridge_beefy::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_beefy::barrel::RequestCount","barrel_bridge_beefy::barrel::ImportedCommitmentsInfo","barrel_bridge_beefy::barrel::CurrentAuthoritySetInfo","barrel_bridge_beefy::barrel::BarrelOwner","barrel_bridge_beefy::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_beefy::barrel::RequestCount","barrel_bridge_beefy::barrel::ImportedCommitmentsInfo","barrel_bridge_beefy::barrel::CurrentAuthoritySetInfo","barrel_bridge_beefy::barrel::BarrelOwner","barrel_bridge_beefy::barrel::BarrelOperatingMode"]],
"barrel_bridge_grandpa":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_grandpa::barrel::FreeHeadersRemaining","barrel_bridge_grandpa::barrel::BestFinalized","barrel_bridge_grandpa::barrel::CurrentAuthoritySet","barrel_bridge_grandpa::barrel::BarrelOwner","barrel_bridge_grandpa::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_grandpa::barrel::FreeHeadersRemaining","barrel_bridge_grandpa::barrel::BestFinalized","barrel_bridge_grandpa::barrel::CurrentAuthoritySet","barrel_bridge_grandpa::barrel::BarrelOwner","barrel_bridge_grandpa::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_grandpa::barrel::FreeHeadersRemaining","barrel_bridge_grandpa::barrel::BestFinalized","barrel_bridge_grandpa::barrel::CurrentAuthoritySet","barrel_bridge_grandpa::barrel::BarrelOwner","barrel_bridge_grandpa::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_grandpa::barrel::FreeHeadersRemaining","barrel_bridge_grandpa::barrel::BestFinalized","barrel_bridge_grandpa::barrel::CurrentAuthoritySet","barrel_bridge_grandpa::barrel::BarrelOwner","barrel_bridge_grandpa::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_grandpa::barrel::FreeHeadersRemaining","barrel_bridge_grandpa::barrel::BestFinalized","barrel_bridge_grandpa::barrel::CurrentAuthoritySet","barrel_bridge_grandpa::barrel::BarrelOwner","barrel_bridge_grandpa::barrel::BarrelOperatingMode"]],
"barrel_bridge_messages":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_messages::barrel::BarrelOwner","barrel_bridge_messages::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_messages::barrel::BarrelOwner","barrel_bridge_messages::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_messages::barrel::BarrelOwner","barrel_bridge_messages::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_messages::barrel::BarrelOwner","barrel_bridge_messages::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_messages::barrel::BarrelOwner","barrel_bridge_messages::barrel::BarrelOperatingMode"]],
"barrel_bridge_synochains":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_synochains::barrel::BarrelOwner","barrel_bridge_synochains::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_synochains::barrel::BarrelOwner","barrel_bridge_synochains::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_synochains::barrel::BarrelOwner","barrel_bridge_synochains::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_synochains::barrel::BarrelOwner","barrel_bridge_synochains::barrel::BarrelOperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_synochains::barrel::BarrelOwner","barrel_bridge_synochains::barrel::BarrelOperatingMode"]],
"barrel_broker":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_broker::barrel::Configuration","barrel_broker::barrel::Reservations","barrel_broker::barrel::Leases","barrel_broker::barrel::Status","barrel_broker::barrel::SaleInfo","barrel_broker::barrel::CoreCountInbox","barrel_broker::barrel::AutoRenewals","barrel_broker::barrel::RevenueInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_broker::barrel::Configuration","barrel_broker::barrel::Reservations","barrel_broker::barrel::Leases","barrel_broker::barrel::Status","barrel_broker::barrel::SaleInfo","barrel_broker::barrel::CoreCountInbox","barrel_broker::barrel::AutoRenewals","barrel_broker::barrel::RevenueInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_broker::barrel::Configuration","barrel_broker::barrel::Reservations","barrel_broker::barrel::Leases","barrel_broker::barrel::Status","barrel_broker::barrel::SaleInfo","barrel_broker::barrel::CoreCountInbox","barrel_broker::barrel::AutoRenewals","barrel_broker::barrel::RevenueInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_broker::barrel::Configuration","barrel_broker::barrel::Reservations","barrel_broker::barrel::Leases","barrel_broker::barrel::Status","barrel_broker::barrel::SaleInfo","barrel_broker::barrel::CoreCountInbox","barrel_broker::barrel::AutoRenewals","barrel_broker::barrel::RevenueInbox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_broker::barrel::Configuration","barrel_broker::barrel::Reservations","barrel_broker::barrel::Leases","barrel_broker::barrel::Status","barrel_broker::barrel::SaleInfo","barrel_broker::barrel::CoreCountInbox","barrel_broker::barrel::AutoRenewals","barrel_broker::barrel::RevenueInbox"]],
"barrel_child_bounties":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_child_bounties::barrel::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_child_bounties::barrel::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_child_bounties::barrel::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_child_bounties::barrel::ChildBountyCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_child_bounties::barrel::ChildBountyCount"]],
"barrel_assator_selection":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_assator_selection::migration::v2::Candidates","barrel_assator_selection::barrel::Invulnerables","barrel_assator_selection::barrel::CandidateList","barrel_assator_selection::barrel::DesiredCandidates","barrel_assator_selection::barrel::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_assator_selection::migration::v2::Candidates","barrel_assator_selection::barrel::Invulnerables","barrel_assator_selection::barrel::CandidateList","barrel_assator_selection::barrel::DesiredCandidates","barrel_assator_selection::barrel::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_assator_selection::migration::v2::Candidates","barrel_assator_selection::barrel::Invulnerables","barrel_assator_selection::barrel::CandidateList","barrel_assator_selection::barrel::DesiredCandidates","barrel_assator_selection::barrel::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_assator_selection::migration::v2::Candidates","barrel_assator_selection::barrel::Invulnerables","barrel_assator_selection::barrel::CandidateList","barrel_assator_selection::barrel::DesiredCandidates","barrel_assator_selection::barrel::CandidacyBond"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_assator_selection::migration::v2::Candidates","barrel_assator_selection::barrel::Invulnerables","barrel_assator_selection::barrel::CandidateList","barrel_assator_selection::barrel::DesiredCandidates","barrel_assator_selection::barrel::CandidacyBond"]],
"barrel_collective":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_collective::barrel::Proposals","barrel_collective::barrel::ProposalCount","barrel_collective::barrel::Members","barrel_collective::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_collective::barrel::Proposals","barrel_collective::barrel::ProposalCount","barrel_collective::barrel::Members","barrel_collective::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_collective::barrel::Proposals","barrel_collective::barrel::ProposalCount","barrel_collective::barrel::Members","barrel_collective::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_collective::barrel::Proposals","barrel_collective::barrel::ProposalCount","barrel_collective::barrel::Members","barrel_collective::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_collective::barrel::Proposals","barrel_collective::barrel::ProposalCount","barrel_collective::barrel::Members","barrel_collective::barrel::Prime"]],
"barrel_collective_content":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_collective_content::barrel::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_collective_content::barrel::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_collective_content::barrel::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_collective_content::barrel::Charter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_collective_content::barrel::Charter"]],
"barrel_democracy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_democracy::barrel::PublicPropCount","barrel_democracy::barrel::PublicProps","barrel_democracy::barrel::ReferendumCount","barrel_democracy::barrel::LowestUnbaked","barrel_democracy::barrel::LastTabledWasExternal","barrel_democracy::barrel::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_democracy::barrel::PublicPropCount","barrel_democracy::barrel::PublicProps","barrel_democracy::barrel::ReferendumCount","barrel_democracy::barrel::LowestUnbaked","barrel_democracy::barrel::LastTabledWasExternal","barrel_democracy::barrel::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_democracy::barrel::PublicPropCount","barrel_democracy::barrel::PublicProps","barrel_democracy::barrel::ReferendumCount","barrel_democracy::barrel::LowestUnbaked","barrel_democracy::barrel::LastTabledWasExternal","barrel_democracy::barrel::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_democracy::barrel::PublicPropCount","barrel_democracy::barrel::PublicProps","barrel_democracy::barrel::ReferendumCount","barrel_democracy::barrel::LowestUnbaked","barrel_democracy::barrel::LastTabledWasExternal","barrel_democracy::barrel::NextExternal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_democracy::barrel::PublicPropCount","barrel_democracy::barrel::PublicProps","barrel_democracy::barrel::ReferendumCount","barrel_democracy::barrel::LowestUnbaked","barrel_democracy::barrel::LastTabledWasExternal","barrel_democracy::barrel::NextExternal"]],
"barrel_dev_mode":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_dev_mode::barrel::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_dev_mode::barrel::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_dev_mode::barrel::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_dev_mode::barrel::Dummy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_dev_mode::barrel::Dummy"]],
"barrel_election_provider_multi_phase":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_election_provider_multi_phase::barrel::Round","barrel_election_provider_multi_phase::barrel::CurrentPhase","barrel_election_provider_multi_phase::barrel::QueuedSolution","barrel_election_provider_multi_phase::barrel::Snapshot","barrel_election_provider_multi_phase::barrel::DesiredTargets","barrel_election_provider_multi_phase::barrel::SnapshotMetadata","barrel_election_provider_multi_phase::barrel::SignedSubmissionNextIndex","barrel_election_provider_multi_phase::barrel::SignedSubmissionIndices","barrel_election_provider_multi_phase::barrel::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_election_provider_multi_phase::barrel::Round","barrel_election_provider_multi_phase::barrel::CurrentPhase","barrel_election_provider_multi_phase::barrel::QueuedSolution","barrel_election_provider_multi_phase::barrel::Snapshot","barrel_election_provider_multi_phase::barrel::DesiredTargets","barrel_election_provider_multi_phase::barrel::SnapshotMetadata","barrel_election_provider_multi_phase::barrel::SignedSubmissionNextIndex","barrel_election_provider_multi_phase::barrel::SignedSubmissionIndices","barrel_election_provider_multi_phase::barrel::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_election_provider_multi_phase::barrel::Round","barrel_election_provider_multi_phase::barrel::CurrentPhase","barrel_election_provider_multi_phase::barrel::QueuedSolution","barrel_election_provider_multi_phase::barrel::Snapshot","barrel_election_provider_multi_phase::barrel::DesiredTargets","barrel_election_provider_multi_phase::barrel::SnapshotMetadata","barrel_election_provider_multi_phase::barrel::SignedSubmissionNextIndex","barrel_election_provider_multi_phase::barrel::SignedSubmissionIndices","barrel_election_provider_multi_phase::barrel::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_election_provider_multi_phase::barrel::Round","barrel_election_provider_multi_phase::barrel::CurrentPhase","barrel_election_provider_multi_phase::barrel::QueuedSolution","barrel_election_provider_multi_phase::barrel::Snapshot","barrel_election_provider_multi_phase::barrel::DesiredTargets","barrel_election_provider_multi_phase::barrel::SnapshotMetadata","barrel_election_provider_multi_phase::barrel::SignedSubmissionNextIndex","barrel_election_provider_multi_phase::barrel::SignedSubmissionIndices","barrel_election_provider_multi_phase::barrel::MinimumUntrustedScore"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_election_provider_multi_phase::barrel::Round","barrel_election_provider_multi_phase::barrel::CurrentPhase","barrel_election_provider_multi_phase::barrel::QueuedSolution","barrel_election_provider_multi_phase::barrel::Snapshot","barrel_election_provider_multi_phase::barrel::DesiredTargets","barrel_election_provider_multi_phase::barrel::SnapshotMetadata","barrel_election_provider_multi_phase::barrel::SignedSubmissionNextIndex","barrel_election_provider_multi_phase::barrel::SignedSubmissionIndices","barrel_election_provider_multi_phase::barrel::MinimumUntrustedScore"]],
"barrel_elections_phragmen":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_elections_phragmen::barrel::Members","barrel_elections_phragmen::barrel::RunnersUp","barrel_elections_phragmen::barrel::Candidates","barrel_elections_phragmen::barrel::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_elections_phragmen::barrel::Members","barrel_elections_phragmen::barrel::RunnersUp","barrel_elections_phragmen::barrel::Candidates","barrel_elections_phragmen::barrel::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_elections_phragmen::barrel::Members","barrel_elections_phragmen::barrel::RunnersUp","barrel_elections_phragmen::barrel::Candidates","barrel_elections_phragmen::barrel::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_elections_phragmen::barrel::Members","barrel_elections_phragmen::barrel::RunnersUp","barrel_elections_phragmen::barrel::Candidates","barrel_elections_phragmen::barrel::ElectionRounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_elections_phragmen::barrel::Members","barrel_elections_phragmen::barrel::RunnersUp","barrel_elections_phragmen::barrel::Candidates","barrel_elections_phragmen::barrel::ElectionRounds"]],
"barrel_example_frame_crate":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_frame_crate::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_frame_crate::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_frame_crate::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_frame_crate::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_frame_crate::barrel::Value"]],
"barrel_example_kitchensink":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_kitchensink::barrel::Foo","barrel_example_kitchensink::barrel::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_kitchensink::barrel::Foo","barrel_example_kitchensink::barrel::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_kitchensink::barrel::Foo","barrel_example_kitchensink::barrel::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_kitchensink::barrel::Foo","barrel_example_kitchensink::barrel::FooWithDefault"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_kitchensink::barrel::Foo","barrel_example_kitchensink::barrel::FooWithDefault"]],
"barrel_example_single_block_migrations":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_single_block_migrations::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_single_block_migrations::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_single_block_migrations::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_single_block_migrations::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_single_block_migrations::barrel::Value"]],
"barrel_example_split":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_split::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_split::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_split::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_split::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_split::barrel::Something"]],
"barrel_example_tasks":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_tasks::barrel::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_tasks::barrel::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_tasks::barrel::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_tasks::barrel::Total"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_tasks::barrel::Total"]],
"barrel_fast_unstake":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_fast_unstake::barrel::Head","barrel_fast_unstake::barrel::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_fast_unstake::barrel::Head","barrel_fast_unstake::barrel::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_fast_unstake::barrel::Head","barrel_fast_unstake::barrel::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_fast_unstake::barrel::Head","barrel_fast_unstake::barrel::ErasToCheckPerBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_fast_unstake::barrel::Head","barrel_fast_unstake::barrel::ErasToCheckPerBlock"]],
"barrel_identity":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_identity::barrel::Registrars"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_identity::barrel::Registrars"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_identity::barrel::Registrars"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_identity::barrel::Registrars"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_identity::barrel::Registrars"]],
"barrel_im_online":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_im_online::barrel::HeartbeatAfter","barrel_im_online::barrel::Keys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_im_online::barrel::HeartbeatAfter","barrel_im_online::barrel::Keys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_im_online::barrel::HeartbeatAfter","barrel_im_online::barrel::Keys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_im_online::barrel::HeartbeatAfter","barrel_im_online::barrel::Keys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_im_online::barrel::HeartbeatAfter","barrel_im_online::barrel::Keys"]],
"barrel_insecure_randomness_collective_flip":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_insecure_randomness_collective_flip::barrel::RandomMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_insecure_randomness_collective_flip::barrel::RandomMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_insecure_randomness_collective_flip::barrel::RandomMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_insecure_randomness_collective_flip::barrel::RandomMaterial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_insecure_randomness_collective_flip::barrel::RandomMaterial"]],
"barrel_membership":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_membership::barrel::Members","barrel_membership::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_membership::barrel::Members","barrel_membership::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_membership::barrel::Members","barrel_membership::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_membership::barrel::Members","barrel_membership::barrel::Prime"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_membership::barrel::Members","barrel_membership::barrel::Prime"]],
"barrel_migrations":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_migrations::barrel::Cursor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_migrations::barrel::Cursor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_migrations::barrel::Cursor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_migrations::barrel::Cursor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_migrations::barrel::Cursor"]],
"barrel_mmr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_mmr::barrel::RootHash","barrel_mmr::barrel::NumberOfLeaves","barrel_mmr::barrel::UseLocalStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_mmr::barrel::RootHash","barrel_mmr::barrel::NumberOfLeaves","barrel_mmr::barrel::UseLocalStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_mmr::barrel::RootHash","barrel_mmr::barrel::NumberOfLeaves","barrel_mmr::barrel::UseLocalStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_mmr::barrel::RootHash","barrel_mmr::barrel::NumberOfLeaves","barrel_mmr::barrel::UseLocalStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_mmr::barrel::RootHash","barrel_mmr::barrel::NumberOfLeaves","barrel_mmr::barrel::UseLocalStorage"]],
"barrel_nfts":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nfts::barrel::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nfts::barrel::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nfts::barrel::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nfts::barrel::NextCollectionId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nfts::barrel::NextCollectionId"]],
"barrel_nis":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nis::barrel::QueueTotals","barrel_nis::barrel::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nis::barrel::QueueTotals","barrel_nis::barrel::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nis::barrel::QueueTotals","barrel_nis::barrel::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nis::barrel::QueueTotals","barrel_nis::barrel::Summary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nis::barrel::QueueTotals","barrel_nis::barrel::Summary"]],
"barrel_node_authorization":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_node_authorization::barrel::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_node_authorization::barrel::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_node_authorization::barrel::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_node_authorization::barrel::WellKnownNodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_node_authorization::barrel::WellKnownNodes"]],
"barrel_nomination_pools":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nomination_pools::barrel::TotalValueLocked","barrel_nomination_pools::barrel::MinJoinBond","barrel_nomination_pools::barrel::MinCreateBond","barrel_nomination_pools::barrel::MaxPools","barrel_nomination_pools::barrel::MaxPoolMembers","barrel_nomination_pools::barrel::MaxPoolMembersPerPool","barrel_nomination_pools::barrel::GlobalMaxCommission","barrel_nomination_pools::barrel::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nomination_pools::barrel::TotalValueLocked","barrel_nomination_pools::barrel::MinJoinBond","barrel_nomination_pools::barrel::MinCreateBond","barrel_nomination_pools::barrel::MaxPools","barrel_nomination_pools::barrel::MaxPoolMembers","barrel_nomination_pools::barrel::MaxPoolMembersPerPool","barrel_nomination_pools::barrel::GlobalMaxCommission","barrel_nomination_pools::barrel::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nomination_pools::barrel::TotalValueLocked","barrel_nomination_pools::barrel::MinJoinBond","barrel_nomination_pools::barrel::MinCreateBond","barrel_nomination_pools::barrel::MaxPools","barrel_nomination_pools::barrel::MaxPoolMembers","barrel_nomination_pools::barrel::MaxPoolMembersPerPool","barrel_nomination_pools::barrel::GlobalMaxCommission","barrel_nomination_pools::barrel::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nomination_pools::barrel::TotalValueLocked","barrel_nomination_pools::barrel::MinJoinBond","barrel_nomination_pools::barrel::MinCreateBond","barrel_nomination_pools::barrel::MaxPools","barrel_nomination_pools::barrel::MaxPoolMembers","barrel_nomination_pools::barrel::MaxPoolMembersPerPool","barrel_nomination_pools::barrel::GlobalMaxCommission","barrel_nomination_pools::barrel::LastPoolId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nomination_pools::barrel::TotalValueLocked","barrel_nomination_pools::barrel::MinJoinBond","barrel_nomination_pools::barrel::MinCreateBond","barrel_nomination_pools::barrel::MaxPools","barrel_nomination_pools::barrel::MaxPoolMembers","barrel_nomination_pools::barrel::MaxPoolMembersPerPool","barrel_nomination_pools::barrel::GlobalMaxCommission","barrel_nomination_pools::barrel::LastPoolId"]],
"barrel_synochain_template":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_synochain_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_synochain_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_synochain_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_synochain_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_synochain_template::barrel::Something"]],
"barrel_referenda":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_referenda::barrel::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_referenda::barrel::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_referenda::barrel::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_referenda::barrel::ReferendumCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_referenda::barrel::ReferendumCount"]],
"barrel_safe_mode":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_safe_mode::barrel::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_safe_mode::barrel::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_safe_mode::barrel::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_safe_mode::barrel::EnteredUntil"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_safe_mode::barrel::EnteredUntil"]],
"barrel_sassafras":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_sassafras::barrel::EpochIndex","barrel_sassafras::barrel::Authorities","barrel_sassafras::barrel::NextAuthorities","barrel_sassafras::barrel::GenesisSlot","barrel_sassafras::barrel::CurrentSlot","barrel_sassafras::barrel::CurrentRandomness","barrel_sassafras::barrel::NextRandomness","barrel_sassafras::barrel::EpochConfig","barrel_sassafras::barrel::NextEpochConfig","barrel_sassafras::barrel::PendingEpochConfigChange","barrel_sassafras::barrel::TicketsMeta","barrel_sassafras::barrel::SortedCandidates","barrel_sassafras::barrel::RingContext","barrel_sassafras::barrel::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_sassafras::barrel::EpochIndex","barrel_sassafras::barrel::Authorities","barrel_sassafras::barrel::NextAuthorities","barrel_sassafras::barrel::GenesisSlot","barrel_sassafras::barrel::CurrentSlot","barrel_sassafras::barrel::CurrentRandomness","barrel_sassafras::barrel::NextRandomness","barrel_sassafras::barrel::EpochConfig","barrel_sassafras::barrel::NextEpochConfig","barrel_sassafras::barrel::PendingEpochConfigChange","barrel_sassafras::barrel::TicketsMeta","barrel_sassafras::barrel::SortedCandidates","barrel_sassafras::barrel::RingContext","barrel_sassafras::barrel::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_sassafras::barrel::EpochIndex","barrel_sassafras::barrel::Authorities","barrel_sassafras::barrel::NextAuthorities","barrel_sassafras::barrel::GenesisSlot","barrel_sassafras::barrel::CurrentSlot","barrel_sassafras::barrel::CurrentRandomness","barrel_sassafras::barrel::NextRandomness","barrel_sassafras::barrel::EpochConfig","barrel_sassafras::barrel::NextEpochConfig","barrel_sassafras::barrel::PendingEpochConfigChange","barrel_sassafras::barrel::TicketsMeta","barrel_sassafras::barrel::SortedCandidates","barrel_sassafras::barrel::RingContext","barrel_sassafras::barrel::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_sassafras::barrel::EpochIndex","barrel_sassafras::barrel::Authorities","barrel_sassafras::barrel::NextAuthorities","barrel_sassafras::barrel::GenesisSlot","barrel_sassafras::barrel::CurrentSlot","barrel_sassafras::barrel::CurrentRandomness","barrel_sassafras::barrel::NextRandomness","barrel_sassafras::barrel::EpochConfig","barrel_sassafras::barrel::NextEpochConfig","barrel_sassafras::barrel::PendingEpochConfigChange","barrel_sassafras::barrel::TicketsMeta","barrel_sassafras::barrel::SortedCandidates","barrel_sassafras::barrel::RingContext","barrel_sassafras::barrel::RingVerifierData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_sassafras::barrel::EpochIndex","barrel_sassafras::barrel::Authorities","barrel_sassafras::barrel::NextAuthorities","barrel_sassafras::barrel::GenesisSlot","barrel_sassafras::barrel::CurrentSlot","barrel_sassafras::barrel::CurrentRandomness","barrel_sassafras::barrel::NextRandomness","barrel_sassafras::barrel::EpochConfig","barrel_sassafras::barrel::NextEpochConfig","barrel_sassafras::barrel::PendingEpochConfigChange","barrel_sassafras::barrel::TicketsMeta","barrel_sassafras::barrel::SortedCandidates","barrel_sassafras::barrel::RingContext","barrel_sassafras::barrel::RingVerifierData"]],
"barrel_scheduler":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_scheduler::barrel::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_scheduler::barrel::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_scheduler::barrel::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_scheduler::barrel::IncompleteSince"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_scheduler::barrel::IncompleteSince"]],
"barrel_session":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_session::historical::barrel::StoredRange","barrel_session::barrel::Validators","barrel_session::barrel::CurrentIndex","barrel_session::barrel::QueuedChanged","barrel_session::barrel::QueuedKeys","barrel_session::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_session::historical::barrel::StoredRange","barrel_session::barrel::Validators","barrel_session::barrel::CurrentIndex","barrel_session::barrel::QueuedChanged","barrel_session::barrel::QueuedKeys","barrel_session::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_session::historical::barrel::StoredRange","barrel_session::barrel::Validators","barrel_session::barrel::CurrentIndex","barrel_session::barrel::QueuedChanged","barrel_session::barrel::QueuedKeys","barrel_session::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_session::historical::barrel::StoredRange","barrel_session::barrel::Validators","barrel_session::barrel::CurrentIndex","barrel_session::barrel::QueuedChanged","barrel_session::barrel::QueuedKeys","barrel_session::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_session::historical::barrel::StoredRange","barrel_session::barrel::Validators","barrel_session::barrel::CurrentIndex","barrel_session::barrel::QueuedChanged","barrel_session::barrel::QueuedKeys","barrel_session::barrel::DisabledValidators"]],
"barrel_society":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_society::barrel::Pot","barrel_society::barrel::Founder","barrel_society::barrel::Head","barrel_society::barrel::Rules","barrel_society::barrel::MemberCount","barrel_society::barrel::RoundCount","barrel_society::barrel::Skeptic","barrel_society::barrel::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_society::barrel::Pot","barrel_society::barrel::Founder","barrel_society::barrel::Head","barrel_society::barrel::Rules","barrel_society::barrel::MemberCount","barrel_society::barrel::RoundCount","barrel_society::barrel::Skeptic","barrel_society::barrel::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_society::barrel::Pot","barrel_society::barrel::Founder","barrel_society::barrel::Head","barrel_society::barrel::Rules","barrel_society::barrel::MemberCount","barrel_society::barrel::RoundCount","barrel_society::barrel::Skeptic","barrel_society::barrel::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_society::barrel::Pot","barrel_society::barrel::Founder","barrel_society::barrel::Head","barrel_society::barrel::Rules","barrel_society::barrel::MemberCount","barrel_society::barrel::RoundCount","barrel_society::barrel::Skeptic","barrel_society::barrel::NextHead"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_society::barrel::Pot","barrel_society::barrel::Founder","barrel_society::barrel::Head","barrel_society::barrel::Rules","barrel_society::barrel::MemberCount","barrel_society::barrel::RoundCount","barrel_society::barrel::Skeptic","barrel_society::barrel::NextHead"]],
"barrel_staking":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_staking::barrel::barrel::ValidatorCount","barrel_staking::barrel::barrel::MinimumValidatorCount","barrel_staking::barrel::barrel::Invulnerables","barrel_staking::barrel::barrel::MinNominatorBond","barrel_staking::barrel::barrel::MinValidatorBond","barrel_staking::barrel::barrel::MinimumActiveStake","barrel_staking::barrel::barrel::MinCommission","barrel_staking::barrel::barrel::MaxValidatorsCount","barrel_staking::barrel::barrel::MaxNominatorsCount","barrel_staking::barrel::barrel::CurrentEra","barrel_staking::barrel::barrel::ActiveEra","barrel_staking::barrel::barrel::ForceEra","barrel_staking::barrel::barrel::MaxStakedRewards","barrel_staking::barrel::barrel::SlashRewardFraction","barrel_staking::barrel::barrel::CanceledSlashPayout","barrel_staking::barrel::barrel::CurrentPlannedSession","barrel_staking::barrel::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_staking::barrel::barrel::ValidatorCount","barrel_staking::barrel::barrel::MinimumValidatorCount","barrel_staking::barrel::barrel::Invulnerables","barrel_staking::barrel::barrel::MinNominatorBond","barrel_staking::barrel::barrel::MinValidatorBond","barrel_staking::barrel::barrel::MinimumActiveStake","barrel_staking::barrel::barrel::MinCommission","barrel_staking::barrel::barrel::MaxValidatorsCount","barrel_staking::barrel::barrel::MaxNominatorsCount","barrel_staking::barrel::barrel::CurrentEra","barrel_staking::barrel::barrel::ActiveEra","barrel_staking::barrel::barrel::ForceEra","barrel_staking::barrel::barrel::MaxStakedRewards","barrel_staking::barrel::barrel::SlashRewardFraction","barrel_staking::barrel::barrel::CanceledSlashPayout","barrel_staking::barrel::barrel::CurrentPlannedSession","barrel_staking::barrel::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_staking::barrel::barrel::ValidatorCount","barrel_staking::barrel::barrel::MinimumValidatorCount","barrel_staking::barrel::barrel::Invulnerables","barrel_staking::barrel::barrel::MinNominatorBond","barrel_staking::barrel::barrel::MinValidatorBond","barrel_staking::barrel::barrel::MinimumActiveStake","barrel_staking::barrel::barrel::MinCommission","barrel_staking::barrel::barrel::MaxValidatorsCount","barrel_staking::barrel::barrel::MaxNominatorsCount","barrel_staking::barrel::barrel::CurrentEra","barrel_staking::barrel::barrel::ActiveEra","barrel_staking::barrel::barrel::ForceEra","barrel_staking::barrel::barrel::MaxStakedRewards","barrel_staking::barrel::barrel::SlashRewardFraction","barrel_staking::barrel::barrel::CanceledSlashPayout","barrel_staking::barrel::barrel::CurrentPlannedSession","barrel_staking::barrel::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_staking::barrel::barrel::ValidatorCount","barrel_staking::barrel::barrel::MinimumValidatorCount","barrel_staking::barrel::barrel::Invulnerables","barrel_staking::barrel::barrel::MinNominatorBond","barrel_staking::barrel::barrel::MinValidatorBond","barrel_staking::barrel::barrel::MinimumActiveStake","barrel_staking::barrel::barrel::MinCommission","barrel_staking::barrel::barrel::MaxValidatorsCount","barrel_staking::barrel::barrel::MaxNominatorsCount","barrel_staking::barrel::barrel::CurrentEra","barrel_staking::barrel::barrel::ActiveEra","barrel_staking::barrel::barrel::ForceEra","barrel_staking::barrel::barrel::MaxStakedRewards","barrel_staking::barrel::barrel::SlashRewardFraction","barrel_staking::barrel::barrel::CanceledSlashPayout","barrel_staking::barrel::barrel::CurrentPlannedSession","barrel_staking::barrel::barrel::DisabledValidators"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_staking::barrel::barrel::ValidatorCount","barrel_staking::barrel::barrel::MinimumValidatorCount","barrel_staking::barrel::barrel::Invulnerables","barrel_staking::barrel::barrel::MinNominatorBond","barrel_staking::barrel::barrel::MinValidatorBond","barrel_staking::barrel::barrel::MinimumActiveStake","barrel_staking::barrel::barrel::MinCommission","barrel_staking::barrel::barrel::MaxValidatorsCount","barrel_staking::barrel::barrel::MaxNominatorsCount","barrel_staking::barrel::barrel::CurrentEra","barrel_staking::barrel::barrel::ActiveEra","barrel_staking::barrel::barrel::ForceEra","barrel_staking::barrel::barrel::MaxStakedRewards","barrel_staking::barrel::barrel::SlashRewardFraction","barrel_staking::barrel::barrel::CanceledSlashPayout","barrel_staking::barrel::barrel::CurrentPlannedSession","barrel_staking::barrel::barrel::DisabledValidators"]],
"barrel_state_trie_migration":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_state_trie_migration::barrel::MigrationProcess","barrel_state_trie_migration::barrel::AutoLimits","barrel_state_trie_migration::barrel::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_state_trie_migration::barrel::MigrationProcess","barrel_state_trie_migration::barrel::AutoLimits","barrel_state_trie_migration::barrel::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_state_trie_migration::barrel::MigrationProcess","barrel_state_trie_migration::barrel::AutoLimits","barrel_state_trie_migration::barrel::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_state_trie_migration::barrel::MigrationProcess","barrel_state_trie_migration::barrel::AutoLimits","barrel_state_trie_migration::barrel::SignedMigrationMaxLimits"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_state_trie_migration::barrel::MigrationProcess","barrel_state_trie_migration::barrel::AutoLimits","barrel_state_trie_migration::barrel::SignedMigrationMaxLimits"]],
"barrel_template":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_template::barrel::Something"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_template::barrel::Something"]],
"barrel_timestamp":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_timestamp::barrel::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_timestamp::barrel::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_timestamp::barrel::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_timestamp::barrel::Now"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_timestamp::barrel::Now"]],
"barrel_transaction_payment":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_transaction_payment::barrel::NextFeeMultiplier","barrel_transaction_payment::barrel::StorageVersion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_transaction_payment::barrel::NextFeeMultiplier","barrel_transaction_payment::barrel::StorageVersion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_transaction_payment::barrel::NextFeeMultiplier","barrel_transaction_payment::barrel::StorageVersion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_transaction_payment::barrel::NextFeeMultiplier","barrel_transaction_payment::barrel::StorageVersion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_transaction_payment::barrel::NextFeeMultiplier","barrel_transaction_payment::barrel::StorageVersion"]],
"barrel_transaction_storage":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_transaction_storage::barrel::ByteFee","barrel_transaction_storage::barrel::EntryFee","barrel_transaction_storage::barrel::StoragePeriod","barrel_transaction_storage::barrel::BlockTransactions","barrel_transaction_storage::barrel::ProofChecked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_transaction_storage::barrel::ByteFee","barrel_transaction_storage::barrel::EntryFee","barrel_transaction_storage::barrel::StoragePeriod","barrel_transaction_storage::barrel::BlockTransactions","barrel_transaction_storage::barrel::ProofChecked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_transaction_storage::barrel::ByteFee","barrel_transaction_storage::barrel::EntryFee","barrel_transaction_storage::barrel::StoragePeriod","barrel_transaction_storage::barrel::BlockTransactions","barrel_transaction_storage::barrel::ProofChecked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_transaction_storage::barrel::ByteFee","barrel_transaction_storage::barrel::EntryFee","barrel_transaction_storage::barrel::StoragePeriod","barrel_transaction_storage::barrel::BlockTransactions","barrel_transaction_storage::barrel::ProofChecked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_transaction_storage::barrel::ByteFee","barrel_transaction_storage::barrel::EntryFee","barrel_transaction_storage::barrel::StoragePeriod","barrel_transaction_storage::barrel::BlockTransactions","barrel_transaction_storage::barrel::ProofChecked"]],
"barrel_treasury":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_treasury::barrel::ProposalCount","barrel_treasury::barrel::Deactivated","barrel_treasury::barrel::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_treasury::barrel::ProposalCount","barrel_treasury::barrel::Deactivated","barrel_treasury::barrel::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_treasury::barrel::ProposalCount","barrel_treasury::barrel::Deactivated","barrel_treasury::barrel::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_treasury::barrel::ProposalCount","barrel_treasury::barrel::Deactivated","barrel_treasury::barrel::Approvals"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_treasury::barrel::ProposalCount","barrel_treasury::barrel::Deactivated","barrel_treasury::barrel::Approvals"]],
"barrel_xcm_bridge_hub_router":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_xcm_bridge_hub_router::barrel::DeliveryFeeFactor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_xcm_bridge_hub_router::barrel::DeliveryFeeFactor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_xcm_bridge_hub_router::barrel::DeliveryFeeFactor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_xcm_bridge_hub_router::barrel::DeliveryFeeFactor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_xcm_bridge_hub_router::barrel::DeliveryFeeFactor"]],
"bitzal_runtime_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"bitzal_runtime_common::assigned_slots::barrel::PermanentSlotCount","bitzal_runtime_common::assigned_slots::barrel::TemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::ActiveTemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::MaxTemporarySlots","bitzal_runtime_common::assigned_slots::barrel::MaxPermanentSlots","bitzal_runtime_common::auctions::barrel::AuctionCounter","bitzal_runtime_common::auctions::barrel::AuctionInfo","bitzal_runtime_common::claims::barrel::Total","bitzal_runtime_common::crowdloan::barrel::NewRaise","bitzal_runtime_common::crowdloan::barrel::EndingsCount","bitzal_runtime_common::crowdloan::barrel::NextFundIndex","bitzal_runtime_common::paras_registrar::barrel::NextFreeSynoId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_runtime_common::assigned_slots::barrel::PermanentSlotCount","bitzal_runtime_common::assigned_slots::barrel::TemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::ActiveTemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::MaxTemporarySlots","bitzal_runtime_common::assigned_slots::barrel::MaxPermanentSlots","bitzal_runtime_common::auctions::barrel::AuctionCounter","bitzal_runtime_common::auctions::barrel::AuctionInfo","bitzal_runtime_common::claims::barrel::Total","bitzal_runtime_common::crowdloan::barrel::NewRaise","bitzal_runtime_common::crowdloan::barrel::EndingsCount","bitzal_runtime_common::crowdloan::barrel::NextFundIndex","bitzal_runtime_common::paras_registrar::barrel::NextFreeSynoId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_runtime_common::assigned_slots::barrel::PermanentSlotCount","bitzal_runtime_common::assigned_slots::barrel::TemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::ActiveTemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::MaxTemporarySlots","bitzal_runtime_common::assigned_slots::barrel::MaxPermanentSlots","bitzal_runtime_common::auctions::barrel::AuctionCounter","bitzal_runtime_common::auctions::barrel::AuctionInfo","bitzal_runtime_common::claims::barrel::Total","bitzal_runtime_common::crowdloan::barrel::NewRaise","bitzal_runtime_common::crowdloan::barrel::EndingsCount","bitzal_runtime_common::crowdloan::barrel::NextFundIndex","bitzal_runtime_common::paras_registrar::barrel::NextFreeSynoId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_runtime_common::assigned_slots::barrel::PermanentSlotCount","bitzal_runtime_common::assigned_slots::barrel::TemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::ActiveTemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::MaxTemporarySlots","bitzal_runtime_common::assigned_slots::barrel::MaxPermanentSlots","bitzal_runtime_common::auctions::barrel::AuctionCounter","bitzal_runtime_common::auctions::barrel::AuctionInfo","bitzal_runtime_common::claims::barrel::Total","bitzal_runtime_common::crowdloan::barrel::NewRaise","bitzal_runtime_common::crowdloan::barrel::EndingsCount","bitzal_runtime_common::crowdloan::barrel::NextFundIndex","bitzal_runtime_common::paras_registrar::barrel::NextFreeSynoId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_runtime_common::assigned_slots::barrel::PermanentSlotCount","bitzal_runtime_common::assigned_slots::barrel::TemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::ActiveTemporarySlotCount","bitzal_runtime_common::assigned_slots::barrel::MaxTemporarySlots","bitzal_runtime_common::assigned_slots::barrel::MaxPermanentSlots","bitzal_runtime_common::auctions::barrel::AuctionCounter","bitzal_runtime_common::auctions::barrel::AuctionInfo","bitzal_runtime_common::claims::barrel::Total","bitzal_runtime_common::crowdloan::barrel::NewRaise","bitzal_runtime_common::crowdloan::barrel::EndingsCount","bitzal_runtime_common::crowdloan::barrel::NextFundIndex","bitzal_runtime_common::paras_registrar::barrel::NextFreeSynoId"]],
"bitzal_runtime_synochains":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"bitzal_runtime_synochains::configuration::barrel::ActiveConfig","bitzal_runtime_synochains::configuration::barrel::PendingConfigs","bitzal_runtime_synochains::disputes::barrel::Frozen","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestsList","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequestsList","bitzal_runtime_synochains::on_demand::barrel::Revenue","bitzal_runtime_synochains::paras::barrel::Synochains","bitzal_runtime_synochains::paras_inherent::barrel::OnChainVotes","bitzal_runtime_synochains::scheduler::barrel::ValidatorGroups","bitzal_runtime_synochains::scheduler::barrel::AvailabilityCores","bitzal_runtime_synochains::scheduler::barrel::SessionStartBlock","bitzal_runtime_synochains::scheduler::barrel::ClaimQueue","bitzal_runtime_synochains::session_info::barrel::EarliestStoredSession","bitzal_runtime_synochains::shared::barrel::CurrentSessionIndex","bitzal_runtime_synochains::shared::barrel::ActiveValidatorIndices","bitzal_runtime_synochains::shared::barrel::ActiveValidatorKeys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_runtime_synochains::configuration::barrel::ActiveConfig","bitzal_runtime_synochains::configuration::barrel::PendingConfigs","bitzal_runtime_synochains::disputes::barrel::Frozen","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestsList","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequestsList","bitzal_runtime_synochains::on_demand::barrel::Revenue","bitzal_runtime_synochains::paras::barrel::Synochains","bitzal_runtime_synochains::paras_inherent::barrel::OnChainVotes","bitzal_runtime_synochains::scheduler::barrel::ValidatorGroups","bitzal_runtime_synochains::scheduler::barrel::AvailabilityCores","bitzal_runtime_synochains::scheduler::barrel::SessionStartBlock","bitzal_runtime_synochains::scheduler::barrel::ClaimQueue","bitzal_runtime_synochains::session_info::barrel::EarliestStoredSession","bitzal_runtime_synochains::shared::barrel::CurrentSessionIndex","bitzal_runtime_synochains::shared::barrel::ActiveValidatorIndices","bitzal_runtime_synochains::shared::barrel::ActiveValidatorKeys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_runtime_synochains::configuration::barrel::ActiveConfig","bitzal_runtime_synochains::configuration::barrel::PendingConfigs","bitzal_runtime_synochains::disputes::barrel::Frozen","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestsList","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequestsList","bitzal_runtime_synochains::on_demand::barrel::Revenue","bitzal_runtime_synochains::paras::barrel::Synochains","bitzal_runtime_synochains::paras_inherent::barrel::OnChainVotes","bitzal_runtime_synochains::scheduler::barrel::ValidatorGroups","bitzal_runtime_synochains::scheduler::barrel::AvailabilityCores","bitzal_runtime_synochains::scheduler::barrel::SessionStartBlock","bitzal_runtime_synochains::scheduler::barrel::ClaimQueue","bitzal_runtime_synochains::session_info::barrel::EarliestStoredSession","bitzal_runtime_synochains::shared::barrel::CurrentSessionIndex","bitzal_runtime_synochains::shared::barrel::ActiveValidatorIndices","bitzal_runtime_synochains::shared::barrel::ActiveValidatorKeys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_runtime_synochains::configuration::barrel::ActiveConfig","bitzal_runtime_synochains::configuration::barrel::PendingConfigs","bitzal_runtime_synochains::disputes::barrel::Frozen","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestsList","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequestsList","bitzal_runtime_synochains::on_demand::barrel::Revenue","bitzal_runtime_synochains::paras::barrel::Synochains","bitzal_runtime_synochains::paras_inherent::barrel::OnChainVotes","bitzal_runtime_synochains::scheduler::barrel::ValidatorGroups","bitzal_runtime_synochains::scheduler::barrel::AvailabilityCores","bitzal_runtime_synochains::scheduler::barrel::SessionStartBlock","bitzal_runtime_synochains::scheduler::barrel::ClaimQueue","bitzal_runtime_synochains::session_info::barrel::EarliestStoredSession","bitzal_runtime_synochains::shared::barrel::CurrentSessionIndex","bitzal_runtime_synochains::shared::barrel::ActiveValidatorIndices","bitzal_runtime_synochains::shared::barrel::ActiveValidatorKeys"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_runtime_synochains::configuration::barrel::ActiveConfig","bitzal_runtime_synochains::configuration::barrel::PendingConfigs","bitzal_runtime_synochains::disputes::barrel::Frozen","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestsList","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequestsList","bitzal_runtime_synochains::on_demand::barrel::Revenue","bitzal_runtime_synochains::paras::barrel::Synochains","bitzal_runtime_synochains::paras_inherent::barrel::OnChainVotes","bitzal_runtime_synochains::scheduler::barrel::ValidatorGroups","bitzal_runtime_synochains::scheduler::barrel::AvailabilityCores","bitzal_runtime_synochains::scheduler::barrel::SessionStartBlock","bitzal_runtime_synochains::scheduler::barrel::ClaimQueue","bitzal_runtime_synochains::session_info::barrel::EarliestStoredSession","bitzal_runtime_synochains::shared::barrel::CurrentSessionIndex","bitzal_runtime_synochains::shared::barrel::ActiveValidatorIndices","bitzal_runtime_synochains::shared::barrel::ActiveValidatorKeys"]],
"bitzal_sdk_docs":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#252-254\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#262-266\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"bitzal_sdk_docs::guides::your_first_barrel::barrel::TotalIssuance","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::TotalIssuance","bitzal_sdk_docs::bitzal_sdk::frame_runtime::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#272-278\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#280-284\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    deprecation_status: <a class=\"enum\" href=\"sp_metadata_ir/types/enum.DeprecationStatusIR.html\" title=\"enum sp_metadata_ir::types::DeprecationStatusIR\">DeprecationStatusIR</a>,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_sdk_docs::guides::your_first_barrel::barrel::TotalIssuance","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::TotalIssuance","bitzal_sdk_docs::bitzal_sdk::frame_runtime::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#300-306\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#308\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_sdk_docs::guides::your_first_barrel::barrel::TotalIssuance","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::TotalIssuance","bitzal_sdk_docs::bitzal_sdk::frame_runtime::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_sdk_docs::guides::your_first_barrel::barrel::TotalIssuance","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::TotalIssuance","bitzal_sdk_docs::bitzal_sdk::frame_runtime::barrel::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#320-326\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#328\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_sdk_docs::guides::your_first_barrel::barrel::TotalIssuance","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::TotalIssuance","bitzal_sdk_docs::bitzal_sdk::frame_runtime::barrel::Value"]],
"bitzal_sdk_frame":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Decode.html\" title=\"trait bitzal_sdk_frame::derive::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Encode.html\" title=\"trait bitzal_sdk_frame::derive::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Encode.html\" title=\"trait bitzal_sdk_frame::derive::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"bitzal_sdk_frame::prelude::frame_system::InherentsApplied","bitzal_sdk_frame::prelude::frame_system::BlockWeight","bitzal_sdk_frame::prelude::frame_system::AllExtrinsicsLen","bitzal_sdk_frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_sdk_frame::prelude::frame_system::InherentsApplied","bitzal_sdk_frame::prelude::frame_system::BlockWeight","bitzal_sdk_frame::prelude::frame_system::AllExtrinsicsLen","bitzal_sdk_frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInfoTrait.html\" title=\"trait bitzal_sdk_frame::traits::StorageInfoTrait\">StorageInfoTrait</a> for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitzal_sdk_frame/traits/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bitzal_sdk_frame/traits/struct.StorageInfo.html\" title=\"struct bitzal_sdk_frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_sdk_frame::prelude::frame_system::InherentsApplied","bitzal_sdk_frame::prelude::frame_system::BlockWeight","bitzal_sdk_frame::prelude::frame_system::AllExtrinsicsLen","bitzal_sdk_frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.TryDecodeEntireStorage.html\" title=\"trait bitzal_sdk_frame::traits::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitzal_sdk_frame/traits/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bitzal_sdk_frame/traits/struct.TryDecodeEntireStorageError.html\" title=\"struct bitzal_sdk_frame::traits::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_sdk_frame::prelude::frame_system::InherentsApplied","bitzal_sdk_frame::prelude::frame_system::BlockWeight","bitzal_sdk_frame::prelude::frame_system::AllExtrinsicsLen","bitzal_sdk_frame::prelude::frame_system::LastRuntimeUpgrade"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.PartialStorageInfoTrait.html\" title=\"trait bitzal_sdk_frame::traits::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitzal_sdk_frame/traits/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bitzal_sdk_frame/traits/struct.StorageInfo.html\" title=\"struct bitzal_sdk_frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_sdk_frame::prelude::frame_system::InherentsApplied","bitzal_sdk_frame::prelude::frame_system::BlockWeight","bitzal_sdk_frame::prelude::frame_system::AllExtrinsicsLen","bitzal_sdk_frame::prelude::frame_system::LastRuntimeUpgrade"]],
"snowbridge_barrel_ethereum_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_ethereum_client::barrel::InitialCheckpointRoot","snowbridge_barrel_ethereum_client::barrel::LatestFinalizedBlockRoot","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateIndex","snowbridge_barrel_ethereum_client::barrel::ValidatorsRoot","snowbridge_barrel_ethereum_client::barrel::CurrentSyncCommittee","snowbridge_barrel_ethereum_client::barrel::NextSyncCommittee","snowbridge_barrel_ethereum_client::barrel::LatestSyncCommitteeUpdatePeriod","snowbridge_barrel_ethereum_client::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_ethereum_client::barrel::InitialCheckpointRoot","snowbridge_barrel_ethereum_client::barrel::LatestFinalizedBlockRoot","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateIndex","snowbridge_barrel_ethereum_client::barrel::ValidatorsRoot","snowbridge_barrel_ethereum_client::barrel::CurrentSyncCommittee","snowbridge_barrel_ethereum_client::barrel::NextSyncCommittee","snowbridge_barrel_ethereum_client::barrel::LatestSyncCommitteeUpdatePeriod","snowbridge_barrel_ethereum_client::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_ethereum_client::barrel::InitialCheckpointRoot","snowbridge_barrel_ethereum_client::barrel::LatestFinalizedBlockRoot","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateIndex","snowbridge_barrel_ethereum_client::barrel::ValidatorsRoot","snowbridge_barrel_ethereum_client::barrel::CurrentSyncCommittee","snowbridge_barrel_ethereum_client::barrel::NextSyncCommittee","snowbridge_barrel_ethereum_client::barrel::LatestSyncCommitteeUpdatePeriod","snowbridge_barrel_ethereum_client::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_ethereum_client::barrel::InitialCheckpointRoot","snowbridge_barrel_ethereum_client::barrel::LatestFinalizedBlockRoot","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateIndex","snowbridge_barrel_ethereum_client::barrel::ValidatorsRoot","snowbridge_barrel_ethereum_client::barrel::CurrentSyncCommittee","snowbridge_barrel_ethereum_client::barrel::NextSyncCommittee","snowbridge_barrel_ethereum_client::barrel::LatestSyncCommitteeUpdatePeriod","snowbridge_barrel_ethereum_client::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_ethereum_client::barrel::InitialCheckpointRoot","snowbridge_barrel_ethereum_client::barrel::LatestFinalizedBlockRoot","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateIndex","snowbridge_barrel_ethereum_client::barrel::ValidatorsRoot","snowbridge_barrel_ethereum_client::barrel::CurrentSyncCommittee","snowbridge_barrel_ethereum_client::barrel::NextSyncCommittee","snowbridge_barrel_ethereum_client::barrel::LatestSyncCommitteeUpdatePeriod","snowbridge_barrel_ethereum_client::barrel::OperatingMode"]],
"snowbridge_barrel_inbound_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_inbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_inbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_inbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_inbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_inbound_queue::barrel::OperatingMode"]],
"snowbridge_barrel_outbound_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_outbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_outbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_outbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_outbound_queue::barrel::OperatingMode"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_outbound_queue::barrel::OperatingMode"]],
"snowbridge_barrel_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_system::barrel::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_system::barrel::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_system::barrel::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_system::barrel::PricingParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_system::barrel::PricingParameters"]],
"matter_test_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#95-100\">source</a><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.hashed_key\" class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#108\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.exists\" class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.get\" class=\"fn\">get</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_get\" class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#151\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.put\" class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#158\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.set\" class=\"fn\">set</a>(val: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#173-175\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#180\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#192\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.kill\" class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#197\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.take\" class=\"fn\">take</a>() -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#210-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\"><code>StorageAppend</code></a>.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#230-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_len\" class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#252-254\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#262-266\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/value/struct.StorageValue.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"matter_test_runtime::matter_test_barrel::barrel::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#272-278\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#280-284\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    deprecation_status: <a class=\"enum\" href=\"sp_metadata_ir/types/enum.DeprecationStatusIR.html\" title=\"enum sp_metadata_ir::types::DeprecationStatusIR\">DeprecationStatusIR</a>,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","matter_test_runtime::matter_test_barrel::barrel::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#300-306\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#308\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","matter_test_runtime::matter_test_barrel::barrel::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#154-160\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#162\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","matter_test_runtime::matter_test_barrel::barrel::Authorities"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#320-326\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/value/struct.StorageValue.html\" title=\"struct frame_support::storage::types::value::StorageValue\">StorageValue</a>&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/value.rs.html#328\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","matter_test_runtime::matter_test_barrel::barrel::Authorities"]],
"xcm_fuzzer":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"xcm_fuzzer::synochain::mock_msg_queue::SynochainId","xcm_fuzzer::synochain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","xcm_fuzzer::synochain::mock_msg_queue::SynochainId","xcm_fuzzer::synochain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","xcm_fuzzer::synochain::mock_msg_queue::SynochainId","xcm_fuzzer::synochain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","xcm_fuzzer::synochain::mock_msg_queue::SynochainId","xcm_fuzzer::synochain::mock_msg_queue::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","xcm_fuzzer::synochain::mock_msg_queue::SynochainId","xcm_fuzzer::synochain::mock_msg_queue::ReceivedDmp"]],
"xcm_simulator":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Get the storage key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">exists</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Load the value from the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to get the underlying value from the provided storage instance; <code>Ok</code> if it exists,\n<code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate a value from some previous type (<code>O</code>) to the current type.</p>\n<p><code>f: F</code> is the translation function.</p>\n<p>Returns <code>Err</code> if the storage item could not be interpreted as the old type, and Ok, along\nwith the new value if it could.</p>\n<p>NOTE: This operates from and to <code>Option&lt;_&gt;</code> types; no effort is made to respect the default\nvalue of the original type.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade,\nwhile ensuring <strong>no usage of this storage are made before the call to\n<code>on_runtime_upgrade</code></strong>. (More precisely prior initialized modules doesn’t make use of this\nstorage).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;Arg&gt;(val: Arg)<div class=\"where\">where\n    Arg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>(val: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query)</h4></section></summary><div class=\"docblock\"><p>Store a value under this key into the provided storage instance.</p>\n<p>this uses the query type rather than the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;R, F&gt;(f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;R, E, F&gt;(f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value if closure returns <code>Ok</code>. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">kill</a>()</h4></section></summary><div class=\"docblock\"><p>Clear the storage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>() -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query</h4></section></summary><div class=\"docblock\"><p>Take a value from storage, removing it afterwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem)<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"xcm_simulator/trait.Encode.html\" title=\"trait xcm_simulator::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given item to the value in the storage.</p>\n<p><code>Value</code> is required to implement [<code>StorageAppend</code>].</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage item will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;Item, EncodeLikeItem&gt;(item: EncodeLikeItem) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"xcm_simulator/trait.Encode.html\" title=\"trait xcm_simulator::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"xcm_simulator::mock_message_queue::barrel::SynochainId","xcm_simulator::mock_message_queue::barrel::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageEntryMetadataBuilder for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","xcm_simulator::mock_message_queue::barrel::SynochainId","xcm_simulator::mock_message_queue::barrel::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; StorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","xcm_simulator::mock_message_queue::barrel::SynochainId","xcm_simulator::mock_message_queue::barrel::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; TryDecodeEntireStorage for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","xcm_simulator::mock_message_queue::barrel::SynochainId","xcm_simulator::mock_message_queue::barrel::ReceivedDmp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageValue%3CPrefix,+Value,+QueryKind,+OnEmpty%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; PartialStorageInfoTrait for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","xcm_simulator::mock_message_queue::barrel::SynochainId","xcm_simulator::mock_message_queue::barrel::ReceivedDmp"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()