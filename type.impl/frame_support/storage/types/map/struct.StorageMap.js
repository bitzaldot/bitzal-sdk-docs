(function() {var type_impls = {
"bridge_hub_fresco_runtime":[],
"bridge_hub_windland_runtime":[],
"emulated_integration_tests_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Encode.html\" title=\"trait emulated_integration_tests_common::impls::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Decode.html\" title=\"trait emulated_integration_tests_common::impls::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Encode.html\" title=\"trait emulated_integration_tests_common::impls::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Decode.html\" title=\"trait emulated_integration_tests_common::impls::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: <a class=\"trait\" href=\"emulated_integration_tests_common/impls/trait.Decode.html\" title=\"trait emulated_integration_tests_common::impls::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","emulated_integration_tests_common::impls::dmp::DownwardMessageQueues","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpOpenChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpAcceptedChannelRequestCount","emulated_integration_tests_common::impls::hrmp::HrmpCloseChannelRequests","emulated_integration_tests_common::impls::hrmp::HrmpWatermarks","emulated_integration_tests_common::impls::hrmp::HrmpChannels","emulated_integration_tests_common::impls::hrmp::HrmpIngressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpEgressChannelsIndex","emulated_integration_tests_common::impls::hrmp::HrmpChannelContents","emulated_integration_tests_common::impls::hrmp::HrmpChannelDigests"]],
"frame_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"frame_system::barrel::Account","frame_system::barrel::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"frame_system::barrel::Account","frame_system::barrel::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","frame_system::barrel::Account","frame_system::barrel::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","frame_system::barrel::Account","frame_system::barrel::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","frame_system::barrel::Account","frame_system::barrel::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","frame_system::barrel::Account","frame_system::barrel::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","frame_system::barrel::Account","frame_system::barrel::BlockHash"]],
"barrel_alliance":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_alliance::barrel::DepositOf","barrel_alliance::barrel::Members","barrel_alliance::barrel::RetiringMembers"]],
"barrel_asset_conversion":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_asset_conversion::barrel::Pools"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_asset_conversion::barrel::Pools"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_asset_conversion::barrel::Pools"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_asset_conversion::barrel::Pools"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_asset_conversion::barrel::Pools"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_asset_conversion::barrel::Pools"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_asset_conversion::barrel::Pools"]],
"barrel_asset_rate":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_asset_rate::barrel::ConversionRateToNative"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_asset_rate::barrel::ConversionRateToNative"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_asset_rate::barrel::ConversionRateToNative"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_asset_rate::barrel::ConversionRateToNative"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_asset_rate::barrel::ConversionRateToNative"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_asset_rate::barrel::ConversionRateToNative"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_asset_rate::barrel::ConversionRateToNative"]],
"barrel_babe":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_babe::barrel::UnderConstruction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_babe::barrel::UnderConstruction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_babe::barrel::UnderConstruction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_babe::barrel::UnderConstruction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_babe::barrel::UnderConstruction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_babe::barrel::UnderConstruction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_babe::barrel::UnderConstruction"]],
"barrel_balances":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_balances::barrel::Account","barrel_balances::barrel::Locks","barrel_balances::barrel::Reserves","barrel_balances::barrel::Holds","barrel_balances::barrel::Freezes"]],
"barrel_beefy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_beefy::barrel::SetIdSession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_beefy::barrel::SetIdSession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_beefy::barrel::SetIdSession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_beefy::barrel::SetIdSession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_beefy::barrel::SetIdSession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_beefy::barrel::SetIdSession"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_beefy::barrel::SetIdSession"]],
"barrel_bounties":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_bounties::barrel::Bounties","barrel_bounties::barrel::BountyDescriptions"]],
"barrel_bridge_beefy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_beefy::barrel::ImportedCommitments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_bridge_beefy::barrel::ImportedCommitments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_beefy::barrel::ImportedCommitments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_beefy::barrel::ImportedCommitments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_beefy::barrel::ImportedCommitments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_beefy::barrel::ImportedCommitments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_bridge_beefy::barrel::ImportedCommitments"]],
"barrel_bridge_grandpa":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_grandpa::barrel::ImportedHeaders"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_bridge_grandpa::barrel::ImportedHeaders"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_grandpa::barrel::ImportedHeaders"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_grandpa::barrel::ImportedHeaders"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_grandpa::barrel::ImportedHeaders"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_grandpa::barrel::ImportedHeaders"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_bridge_grandpa::barrel::ImportedHeaders"]],
"barrel_bridge_messages":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_bridge_messages::barrel::InboundLanes","barrel_bridge_messages::barrel::OutboundLanes","barrel_bridge_messages::barrel::OutboundMessages"]],
"barrel_bridge_synochains":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_synochains::barrel::ParasInfo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_bridge_synochains::barrel::ParasInfo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_synochains::barrel::ParasInfo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_synochains::barrel::ParasInfo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_synochains::barrel::ParasInfo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_synochains::barrel::ParasInfo"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_bridge_synochains::barrel::ParasInfo"]],
"barrel_bridge_relayers":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_bridge_relayers::barrel::RegisteredRelayers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_bridge_relayers::barrel::RegisteredRelayers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_bridge_relayers::barrel::RegisteredRelayers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_bridge_relayers::barrel::RegisteredRelayers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_bridge_relayers::barrel::RegisteredRelayers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_bridge_relayers::barrel::RegisteredRelayers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_bridge_relayers::barrel::RegisteredRelayers"]],
"barrel_broker":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_broker::barrel::PotentialRenewals","barrel_broker::barrel::Regions","barrel_broker::barrel::Workplan","barrel_broker::barrel::Workload","barrel_broker::barrel::InstaPoolContribution","barrel_broker::barrel::InstaPoolIo","barrel_broker::barrel::InstaPoolHistory"]],
"barrel_child_bounties":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_child_bounties::barrel::ParentChildBounties","barrel_child_bounties::barrel::ChildBountyDescriptions","barrel_child_bounties::barrel::ChildrenCuratorFees"]],
"barrel_assator_selection":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_assator_selection::barrel::LastAuthoredBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_assator_selection::barrel::LastAuthoredBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_assator_selection::barrel::LastAuthoredBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_assator_selection::barrel::LastAuthoredBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_assator_selection::barrel::LastAuthoredBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_assator_selection::barrel::LastAuthoredBlock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_assator_selection::barrel::LastAuthoredBlock"]],
"barrel_collective":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_collective::barrel::ProposalOf","barrel_collective::barrel::CostOf","barrel_collective::barrel::Voting"]],
"barrel_contracts":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_contracts::migration::v12::CodeInfoOf","barrel_contracts::migration::v12::PristineCode","barrel_contracts::migration::v13::ContractInfoOf","barrel_contracts::migration::v16::ContractInfoOf"]],
"barrel_conviction_voting":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_conviction_voting::barrel::ClassLocksFor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_conviction_voting::barrel::ClassLocksFor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_conviction_voting::barrel::ClassLocksFor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_conviction_voting::barrel::ClassLocksFor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_conviction_voting::barrel::ClassLocksFor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_conviction_voting::barrel::ClassLocksFor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_conviction_voting::barrel::ClassLocksFor"]],
"barrel_democracy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_democracy::barrel::DepositOf","barrel_democracy::barrel::ReferendumInfoOf","barrel_democracy::barrel::VotingOf","barrel_democracy::barrel::Blacklist","barrel_democracy::barrel::Cancellations","barrel_democracy::barrel::MetadataOf"]],
"barrel_dev_mode":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_dev_mode::barrel::Bar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_dev_mode::barrel::Bar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_dev_mode::barrel::Bar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_dev_mode::barrel::Bar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_dev_mode::barrel::Bar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_dev_mode::barrel::Bar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_dev_mode::barrel::Bar"]],
"barrel_election_provider_multi_phase":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_election_provider_multi_phase::barrel::SignedSubmissionsMap"]],
"barrel_elections_phragmen":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_elections_phragmen::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_elections_phragmen::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_elections_phragmen::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_elections_phragmen::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_elections_phragmen::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_elections_phragmen::barrel::Voting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_elections_phragmen::barrel::Voting"]],
"barrel_example_kitchensink":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_example_kitchensink::barrel::Bar","barrel_example_kitchensink::barrel::AlternativeSyntax","barrel_example_kitchensink::barrel::AlternativeSyntax2"]],
"barrel_example_mbm":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_example_mbm::migrations::v1::v0::MyMap","barrel_example_mbm::barrel::MyMap"]],
"barrel_example_tasks":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_example_tasks::barrel::Numbers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_example_tasks::barrel::Numbers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_example_tasks::barrel::Numbers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_example_tasks::barrel::Numbers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_example_tasks::barrel::Numbers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_example_tasks::barrel::Numbers"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_example_tasks::barrel::Numbers"]],
"barrel_identity":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_identity::barrel::IdentityOf","barrel_identity::barrel::SuperOf","barrel_identity::barrel::SubsOf","barrel_identity::barrel::UsernameAuthorities","barrel_identity::barrel::AccountOfUsername","barrel_identity::barrel::PendingUsernames"]],
"barrel_indices":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_indices::barrel::Accounts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_indices::barrel::Accounts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_indices::barrel::Accounts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_indices::barrel::Accounts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_indices::barrel::Accounts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_indices::barrel::Accounts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_indices::barrel::Accounts"]],
"barrel_migrations":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_migrations::barrel::Historic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_migrations::barrel::Historic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_migrations::barrel::Historic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_migrations::barrel::Historic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_migrations::barrel::Historic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_migrations::barrel::Historic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_migrations::barrel::Historic"]],
"barrel_mmr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_mmr::barrel::Nodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_mmr::barrel::Nodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_mmr::barrel::Nodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_mmr::barrel::Nodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_mmr::barrel::Nodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_mmr::barrel::Nodes"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_mmr::barrel::Nodes"]],
"barrel_nft_fractionalization":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nft_fractionalization::barrel::NftToAsset"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_nft_fractionalization::barrel::NftToAsset"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nft_fractionalization::barrel::NftToAsset"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nft_fractionalization::barrel::NftToAsset"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nft_fractionalization::barrel::NftToAsset"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nft_fractionalization::barrel::NftToAsset"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_nft_fractionalization::barrel::NftToAsset"]],
"barrel_nfts":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_nfts::barrel::Collection","barrel_nfts::barrel::OwnershipAcceptance","barrel_nfts::barrel::CollectionMetadataOf","barrel_nfts::barrel::CollectionConfigOf"]],
"barrel_nis":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_nis::barrel::Queues","barrel_nis::barrel::Receipts"]],
"barrel_node_authorization":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_node_authorization::barrel::Owners","barrel_node_authorization::barrel::AdditionalConnections"]],
"barrel_nomination_pools":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_nomination_pools::barrel::ClaimPermissions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_nomination_pools::barrel::ClaimPermissions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_nomination_pools::barrel::ClaimPermissions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_nomination_pools::barrel::ClaimPermissions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_nomination_pools::barrel::ClaimPermissions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_nomination_pools::barrel::ClaimPermissions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_nomination_pools::barrel::ClaimPermissions"]],
"barrel_offences":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_offences::barrel::Reports"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_offences::barrel::Reports"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_offences::barrel::Reports"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_offences::barrel::Reports"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_offences::barrel::Reports"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_offences::barrel::Reports"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_offences::barrel::Reports"]],
"barrel_parameters":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_parameters::barrel::Parameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_parameters::barrel::Parameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_parameters::barrel::Parameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_parameters::barrel::Parameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_parameters::barrel::Parameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_parameters::barrel::Parameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_parameters::barrel::Parameters"]],
"barrel_proxy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_proxy::barrel::Proxies","barrel_proxy::barrel::Announcements"]],
"barrel_ranked_collective":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_ranked_collective::barrel::MemberCount","barrel_ranked_collective::barrel::Members","barrel_ranked_collective::barrel::VotingCleanup"]],
"barrel_recovery":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_recovery::barrel::Recoverable","barrel_recovery::barrel::Proxy"]],
"barrel_referenda":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"barrel_referenda/struct.Vec.html\" title=\"struct barrel_referenda::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"barrel_referenda/trait.Get.html\" title=\"trait barrel_referenda::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_referenda::migration::v0::ReferendumInfoFor","barrel_referenda::barrel::ReferendumInfoFor","barrel_referenda::barrel::TrackQueue","barrel_referenda::barrel::DecidingCount","barrel_referenda::barrel::MetadataOf"]],
"barrel_sassafras":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_sassafras::barrel::TicketsIds","barrel_sassafras::barrel::TicketsData","barrel_sassafras::barrel::UnsortedSegments"]],
"barrel_scheduler":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_scheduler::barrel::Agenda","barrel_scheduler::barrel::Retries"]],
"barrel_session":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_session::historical::barrel::HistoricalSessions","barrel_session::barrel::NextKeys","barrel_session::barrel::KeyOwner"]],
"barrel_society":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_society::barrel::Members","barrel_society::barrel::Payouts","barrel_society::barrel::MemberByIndex","barrel_society::barrel::SuspendedMembers","barrel_society::barrel::Candidates"]],
"barrel_staking":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_staking::barrel::barrel::Bonded","barrel_staking::barrel::barrel::Ledger","barrel_staking::barrel::barrel::Payee","barrel_staking::barrel::barrel::ErasStartSessionIndex","barrel_staking::barrel::barrel::ErasValidatorReward","barrel_staking::barrel::barrel::ErasRewardPoints","barrel_staking::barrel::barrel::ErasTotalStake","barrel_staking::barrel::barrel::UnappliedSlashes","barrel_staking::barrel::barrel::SlashingSpans"]],
"barrel_tips":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_tips::barrel::Tips","barrel_tips::barrel::Reasons"]],
"barrel_transaction_storage":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_transaction_storage::barrel::Transactions","barrel_transaction_storage::barrel::ChunkCount"]],
"barrel_treasury":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_treasury::barrel::Proposals","barrel_treasury::barrel::Spends"]],
"barrel_tx_pause":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_tx_pause::barrel::PausedCalls"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_tx_pause::barrel::PausedCalls"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_tx_pause::barrel::PausedCalls"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_tx_pause::barrel::PausedCalls"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_tx_pause::barrel::PausedCalls"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_tx_pause::barrel::PausedCalls"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_tx_pause::barrel::PausedCalls"]],
"barrel_uniques":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_uniques::barrel::Collection","barrel_uniques::barrel::OwnershipAcceptance"]],
"barrel_vesting":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_vesting::barrel::Vesting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_vesting::barrel::Vesting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_vesting::barrel::Vesting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_vesting::barrel::Vesting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_vesting::barrel::Vesting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_vesting::barrel::Vesting"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_vesting::barrel::Vesting"]],
"barrel_whitelist":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_whitelist::barrel::WhitelistedCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_whitelist::barrel::WhitelistedCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_whitelist::barrel::WhitelistedCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_whitelist::barrel::WhitelistedCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_whitelist::barrel::WhitelistedCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_whitelist::barrel::WhitelistedCall"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_whitelist::barrel::WhitelistedCall"]],
"barrel_xcm_bridge_hub":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","barrel_xcm_bridge_hub::barrel::Bridges","barrel_xcm_bridge_hub::barrel::LaneToBridge"]],
"bitzal_runtime_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","bitzal_runtime_common::assigned_slots::barrel::PermanentSlots","bitzal_runtime_common::assigned_slots::barrel::TemporarySlots","bitzal_runtime_common::auctions::barrel::ReservedAmounts","bitzal_runtime_common::auctions::barrel::Winning","bitzal_runtime_common::claims::barrel::Claims","bitzal_runtime_common::claims::barrel::Vesting","bitzal_runtime_common::crowdloan::barrel::Funds","bitzal_runtime_common::paras_registrar::barrel::Paras","bitzal_runtime_common::slots::barrel::Leases"]],
"bitzal_runtime_synochains":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","bitzal_runtime_synochains::dmp::barrel::DownwardMessageQueues","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpOpenChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpAcceptedChannelRequestCount","bitzal_runtime_synochains::hrmp::barrel::HrmpCloseChannelRequests","bitzal_runtime_synochains::hrmp::barrel::HrmpWatermarks","bitzal_runtime_synochains::hrmp::barrel::HrmpChannels","bitzal_runtime_synochains::hrmp::barrel::HrmpIngressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpEgressChannelsIndex","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelContents","bitzal_runtime_synochains::hrmp::barrel::HrmpChannelDigests","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailability","bitzal_runtime_synochains::inclusion::migration::v0::PendingAvailabilityCommitments","bitzal_runtime_synochains::inclusion::migration::v0::AvailabilityBitfields","bitzal_runtime_synochains::paras::barrel::Heads","bitzal_runtime_synochains::paras::barrel::MostRecentContext","bitzal_runtime_synochains::paras::barrel::CurrentCodeHash","bitzal_runtime_synochains::paras::barrel::PastCodeMeta","bitzal_runtime_synochains::paras::barrel::FutureCodeUpgrades","bitzal_runtime_synochains::paras::barrel::FutureCodeHash","bitzal_runtime_synochains::paras::barrel::UpgradeRestrictionSignal","bitzal_runtime_synochains::paras::barrel::ActionsQueue","bitzal_runtime_synochains::paras::barrel::CodeByHash","bitzal_runtime_synochains::session_info::barrel::Sessions","bitzal_runtime_synochains::session_info::barrel::AccountKeys","bitzal_runtime_synochains::session_info::barrel::SessionExecutorParams"]],
"bitzal_sdk_docs":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#149-158\">source</a><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#161\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.hashed_key_for\" class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#166\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.contains_key\" class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#171\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.get\" class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#178\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.try_get\" class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#183\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.swap\" class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#188\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.set\" class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#193\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.insert\" class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.remove\" class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#203-206\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.mutate\" class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#211-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.try_mutate\" class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#220-223\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.mutate_extant\" class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#228-231\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.mutate_exists\" class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#238-241\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.try_mutate_exists\" class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.take\" class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#260-265\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.append\" class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageAppend.html\" title=\"trait frame_support::storage::StorageAppend\">StorageAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#282-284\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.decode_len\" class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\">StorageDecodeLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeLength.html\" title=\"trait frame_support::storage::StorageDecodeLength\"><code>StorageDecodeLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#304-306\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.decode_non_dedup_len\" class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\">StorageDecodeNonDedupLength</a>,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement <a href=\"frame_support/storage/trait.StorageDecodeNonDedupLength.html\" title=\"trait frame_support::storage::StorageDecodeNonDedupLength\"><code>StorageDecodeNonDedupLength</code></a>.</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#314-316\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.migrate_key\" class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#332\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.remove_all\" class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_io/enum.KillStorageResult.html\" title=\"enum sp_io::KillStorageResult\">KillStorageResult</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#360\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.clear\" class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"struct\" href=\"sp_externalities/struct.MultiRemovalResults.html\" title=\"struct sp_externalities::MultiRemovalResults\">MultiRemovalResults</a></h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_externalities/struct.MultiRemovalResults.html\" title=\"struct sp_externalities::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#367\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter_values\" class=\"fn\">iter_values</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#385\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.translate_values\" class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#392-397\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.try_append\" class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: <a class=\"trait\" href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\">StorageTryAppend</a>&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements <a href=\"frame_support/storage/trait.StorageTryAppend.html\" title=\"trait frame_support::storage::StorageTryAppend\"><code>StorageTryAppend</code></a>.</p>\n</div></details></div></details>",0,"bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#403-412\">source</a><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a> + <a class=\"trait\" href=\"frame_support/hash/trait.ReversibleStorageHasher.html\" title=\"trait frame_support::hash::ReversibleStorageHasher\">ReversibleStorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#417\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter\" class=\"fn\">iter</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#425\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter_from\" class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#433-435\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter_from_key\" class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#442\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter_keys\" class=\"fn\">iter_keys</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.KeyPrefixIterator.html\" title=\"struct frame_support::storage::KeyPrefixIterator\">KeyPrefixIterator</a>&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#450\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter_keys_from\" class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.KeyPrefixIterator.html\" title=\"struct frame_support::storage::KeyPrefixIterator\">KeyPrefixIterator</a>&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#458-460\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.iter_keys_from_key\" class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.KeyPrefixIterator.html\" title=\"struct frame_support::storage::KeyPrefixIterator\">KeyPrefixIterator</a>&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#467\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.drain\" class=\"fn\">drain</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#477\">source</a><h4 class=\"code-header\">pub fn <a href=\"frame_support/storage/types/map/struct.StorageMap.html#tymethod.translate\" class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#482-491\">source</a><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html\" title=\"trait frame_support::storage::types::StorageEntryMetadataBuilder\">StorageEntryMetadataBuilder</a> for <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#493-497\">source</a><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.StorageEntryMetadataBuilder.html#tymethod.build_metadata\" class=\"fn\">build_metadata</a>(\n    deprecation_status: <a class=\"enum\" href=\"sp_metadata_ir/types/enum.DeprecationStatusIR.html\" title=\"enum sp_metadata_ir::types::DeprecationStatusIR\">DeprecationStatusIR</a>,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_metadata_ir/types/struct.StorageEntryMetadataIR.html\" title=\"struct sp_metadata_ir::types::StorageEntryMetadataIR\">StorageEntryMetadataIR</a>&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#517-526\">source</a><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::storage::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#528\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#171-180\">source</a><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html\" title=\"trait frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/try_runtime/decode_entire_state.rs.html#182\">source</a><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/try_runtime/decode_entire_state/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/try_runtime/decode_entire_state/struct.TryDecodeEntireStorageError.html\" title=\"struct frame_support::traits::try_runtime::decode_entire_state::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#544-554\">source</a><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html\" title=\"trait frame_support::traits::storage::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#556\">source</a><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/storage/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/storage/struct.StorageInfo.html\" title=\"struct frame_support::traits::storage::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#130-139\">source</a><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"frame_support/storage/trait.StoragePrefixedMap.html\" title=\"trait frame_support::storage::StoragePrefixedMap\">StoragePrefixedMap</a>&lt;Value&gt; for <a class=\"struct\" href=\"frame_support/storage/types/map/struct.StorageMap.html\" title=\"struct frame_support::storage::types::map::StorageMap\">StorageMap</a>&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"frame_support/traits/storage/trait.StorageInstance.html\" title=\"trait frame_support::traits::storage::StorageInstance\">StorageInstance</a>,\n    Hasher: <a class=\"trait\" href=\"frame_support/hash/trait.StorageHasher.html\" title=\"trait frame_support::hash::StorageHasher\">StorageHasher</a>,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, OnEmpty&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#141\">source</a><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#tymethod.barrel_prefix\" class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/map.rs.html#144\">source</a><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#tymethod.storage_prefix\" class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1372\">source</a><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.final_prefix\" class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1388\">source</a><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.remove_all\" class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_io/enum.KillStorageResult.html\" title=\"enum sp_io::KillStorageResult\">KillStorageResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.remove_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1415\">source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.clear\" class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"struct\" href=\"sp_externalities/struct.MultiRemovalResults.html\" title=\"struct sp_externalities::MultiRemovalResults\">MultiRemovalResults</a></h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.clear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1422\">source</a><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.iter_values\" class=\"fn\">iter_values</a>() -&gt; <a class=\"struct\" href=\"frame_support/storage/struct.PrefixIterator.html\" title=\"struct frame_support::storage::PrefixIterator\">PrefixIterator</a>&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.iter_values\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/mod.rs.html#1446\">source</a><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.translate_values\" class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a href=\"frame_support/storage/trait.StoragePrefixedMap.html#method.translate_values\">Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","bitzal_sdk_docs::guides::your_first_barrel::barrel::Balances","bitzal_sdk_docs::guides::your_first_barrel::barrel_v2::Balances"]],
"bitzal_sdk_frame":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Encode.html\" title=\"trait bitzal_sdk_frame::derive::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;Value&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Decode.html\" title=\"trait bitzal_sdk_frame::derive::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Encode.html\" title=\"trait bitzal_sdk_frame::derive::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"KeyPrefixIterator&lt;Key&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"KeyPrefixIterator&lt;Key&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"KeyPrefixIterator&lt;Key&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;(Key, Value)&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Decode.html\" title=\"trait bitzal_sdk_frame::derive::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInfoTrait.html\" title=\"trait bitzal_sdk_frame::traits::StorageInfoTrait\">StorageInfoTrait</a> for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitzal_sdk_frame/traits/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bitzal_sdk_frame/traits/struct.StorageInfo.html\" title=\"struct bitzal_sdk_frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.TryDecodeEntireStorage.html\" title=\"trait bitzal_sdk_frame::traits::TryDecodeEntireStorage\">TryDecodeEntireStorage</a> for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitzal_sdk_frame/traits/trait.TryDecodeEntireStorage.html#tymethod.try_decode_entire_state\" class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bitzal_sdk_frame/traits/struct.TryDecodeEntireStorageError.html\" title=\"struct bitzal_sdk_frame::traits::TryDecodeEntireStorageError\">TryDecodeEntireStorageError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.PartialStorageInfoTrait.html\" title=\"trait bitzal_sdk_frame::traits::PartialStorageInfoTrait\">PartialStorageInfoTrait</a> for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitzal_sdk_frame/traits/trait.PartialStorageInfoTrait.html#tymethod.partial_storage_info\" class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"bitzal_sdk_frame/traits/struct.StorageInfo.html\" title=\"struct bitzal_sdk_frame::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","PartialStorageInfoTrait","bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.StorageInstance.html\" title=\"trait bitzal_sdk_frame::traits::StorageInstance\">StorageInstance</a>,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"bitzal_sdk_frame/traits/trait.Get.html\" title=\"trait bitzal_sdk_frame::traits::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"PrefixIterator&lt;Value&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: <a class=\"trait\" href=\"bitzal_sdk_frame/derive/trait.Decode.html\" title=\"trait bitzal_sdk_frame::derive::Decode\">Decode</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","bitzal_sdk_frame::prelude::frame_system::Account","bitzal_sdk_frame::prelude::frame_system::BlockHash"]],
"snowbridge_barrel_ethereum_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconState","snowbridge_barrel_ethereum_client::barrel::FinalizedBeaconStateMapping"]],
"snowbridge_barrel_inbound_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_inbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"snowbridge_barrel_inbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_inbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_inbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_inbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_inbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","snowbridge_barrel_inbound_queue::barrel::Nonce"]],
"snowbridge_barrel_outbound_queue":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_outbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"snowbridge_barrel_outbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_outbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_outbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_outbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_outbound_queue::barrel::Nonce"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","snowbridge_barrel_outbound_queue::barrel::Nonce"]],
"snowbridge_barrel_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: Encode,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: Get&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: Get&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","snowbridge_barrel_system::barrel::Agents","snowbridge_barrel_system::barrel::Channels","snowbridge_barrel_system::barrel::ForeignToNativeId","snowbridge_barrel_system::barrel::NativeToForeignId"]],
"xcm_simulator":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hashed_key_for\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hashed_key_for</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Get the storage key used to fetch a value corresponding to a specific key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_key</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Does the value (explicitly) exist in storage?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Load the value associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try to get the value for the given key from the map.</p>\n<p>Returns <code>Ok</code> if it exists, <code>Err</code> if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">swap</a>&lt;KeyArg1, KeyArg2&gt;(key1: KeyArg1, key2: KeyArg2)<div class=\"where\">where\n    KeyArg1: EncodeLike&lt;Key&gt;,\n    KeyArg2: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Swap the values of two keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set</a>&lt;KeyArg&gt;(\n    key: KeyArg,\n    q: &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query\n)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store or remove the value to be associated with <code>key</code> so that <code>get</code> returns the <code>query</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;KeyArg, ValArg&gt;(key: KeyArg, val: ValArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    ValArg: EncodeLike&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Store a value to be associated with the given key from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>&lt;KeyArg&gt;(key: KeyArg)<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_extant\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_extant</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Value</a>) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key iff it exists. Do nothing and return the default value if not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">mutate_exists</a>&lt;KeyArg, R, F&gt;(key: KeyArg, f: F) -&gt; R<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the value under a key. Deletes the item if mutated to a <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mutate_exists\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_mutate_exists</a>&lt;KeyArg, R, E, F&gt;(key: KeyArg, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Mutate the item, only if an <code>Ok</code> value is returned. Deletes the item if mutated to a <code>None</code>.\n<code>f</code> will always be called with an option representing if the storage item exists (<code>Some&lt;V&gt;</code>)\nor if the storage item does not exist (<code>None</code>), independent of the <code>QueryType</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">take</a>&lt;KeyArg&gt;(\n    key: KeyArg\n) -&gt; &lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Take the value under a key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">append</a>&lt;Item, EncodeLikeItem, EncodeLikeKey&gt;(\n    key: EncodeLikeKey,\n    item: EncodeLikeItem\n)<div class=\"where\">where\n    EncodeLikeKey: EncodeLike&lt;Key&gt;,\n    Item: <a class=\"trait\" href=\"xcm_simulator/trait.Encode.html\" title=\"trait xcm_simulator::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Append the given items to the value in the storage.</p>\n<p><code>Value</code> is required to implement <code>codec::EncodeAppend</code>.</p>\n<h5 id=\"warning\"><a class=\"doc-anchor\" href=\"#warning\">§</a>Warning</h5>\n<p>If the storage item is not encoded properly, the storage will be overwritten\nand set to <code>[item]</code>. Any default value set for the storage item will be ignored\non overwrite.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value under the\ngiven <code>key</code>.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-1\"><a class=\"doc-anchor\" href=\"#warning-1\">§</a>Warning</h5>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is completely\nignored by this function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_non_dedup_len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">decode_non_dedup_len</a>&lt;KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    KeyArg: EncodeLike&lt;Key&gt;,\n    Value: StorageDecodeNonDedupLength,</div></h4></section></summary><div class=\"docblock\"><p>Read the length of the storage value without decoding the entire value.</p>\n<p><code>Value</code> is required to implement [<code>StorageDecodeNonDedupLength</code>].</p>\n<p>If the value does not exists or it fails to decode the length, <code>None</code> is returned.\nOtherwise <code>Some(len)</code> is returned.</p>\n<h5 id=\"warning-2\"><a class=\"doc-anchor\" href=\"#warning-2\">§</a>Warning</h5>\n<ul>\n<li>\n<p><code>None</code> does not mean that <code>get()</code> does not return a value. The default value is\ncompletely\nignored by this function.</p>\n</li>\n<li>\n<p>The value returned is the non-deduplicated length of the underlying Vector in storage.This\nmeans that any duplicate items are included.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">migrate_key</a>&lt;OldHasher, KeyArg&gt;(key: KeyArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;<div class=\"where\">where\n    OldHasher: StorageHasher,\n    KeyArg: EncodeLike&lt;Key&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code> to the current hasher.</p>\n<p>If the key doesn’t exist, then it’s a no-op. If it does, then it returns its value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span></summary><div class=\"docblock\"><p>Remove all values of the storage in the overlay and up to <code>limit</code> in the backend.</p>\n<p>All values in the client overlay will be deleted, if there is some <code>limit</code> then up to\n<code>limit</code> values are deleted from the client backend, if <code>limit</code> is none then all values in\nthe client backend are deleted.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Calling this multiple times per block with a <code>limit</code> set leads always to the same keys being\nremoved and the same result being returned. This happens because the keys to delete in the\noverlay are not taken into account when deleting keys in the backend.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class=\"docblock\"><p>Attempt to remove all items from the map.</p>\n<p>Returns <a href=\"sp_io::MultiRemovalResults\"><code>MultiRemovalResults</code></a> to inform about the result. Once\nthe resultant <code>maybe_cursor</code> field is <code>None</code>, then no further items remain to be deleted.</p>\n<p>NOTE: After the initial call for any given map, it is important that no further items\nare inserted into the map. If so, then the map may not be empty when the resultant\n<code>maybe_cursor</code> is <code>None</code>.</p>\n<h5 id=\"limit\"><a class=\"doc-anchor\" href=\"#limit\">§</a>Limit</h5>\n<p>A <code>limit</code> must always be provided through in order to cap the maximum\namount of deletions done in a single call. This is one fewer than the\nmaximum number of backend iterations which may be done by this operation and as such\nrepresents the maximum number of backend deletions which may happen. A <code>limit</code> of zero\nimplies that no keys will be deleted, though there may be a single iteration done.</p>\n<h5 id=\"cursor\"><a class=\"doc-anchor\" href=\"#cursor\">§</a>Cursor</h5>\n<p>A <em>cursor</em> may be passed in to this operation with <code>maybe_cursor</code>. <code>None</code> should only be\npassed once (in the initial call) for any given storage map. Subsequent calls\noperating on the same map should always pass <code>Some</code>, and this should be equal to the\nprevious call result’s <code>maybe_cursor</code> field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class=\"docblock\"><p>Iter over all value of the storage.</p>\n<p>NOTE: If a value failed to decode because storage is corrupted then it is skipped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fail to decode because storage is corrupted then it is skipped.</p>\n<h5 id=\"warning-3\"><a class=\"doc-anchor\" href=\"#warning-3\">§</a>Warning</h5>\n<p>This function must be used with care, before being updated the storage still contains the\nold type, thus other calls (such as <code>get</code>) will fail at decoding it.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>This would typically be called inside the module implementation of on_runtime_upgrade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_append\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_append</a>&lt;KArg, Item, EncodeLikeItem&gt;(\n    key: KArg,\n    item: EncodeLikeItem\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;Key&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Item: <a class=\"trait\" href=\"xcm_simulator/trait.Encode.html\" title=\"trait xcm_simulator::Encode\">Encode</a>,\n    EncodeLikeItem: EncodeLike&lt;Item&gt;,\n    Value: StorageTryAppend&lt;Item&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Try and append the given item to the value in the storage.</p>\n<p>Is only available if <code>Value</code> of the storage implements [<code>StorageTryAppend</code>].</p>\n</div></details></div></details>",0,"xcm_simulator::dmp::DownwardMessageQueues"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher + ReversibleStorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_raw_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all elements in the map after a specified <code>starting_key</code> in no\nparticular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys</a>() -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map in no particular order.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from</a>(starting_raw_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_raw_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_keys_from_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_keys_from_key</a>(\n    starting_key: impl EncodeLike&lt;Key&gt;\n) -&gt; KeyPrefixIterator&lt;Key&gt;</h4></section></summary><div class=\"docblock\"><p>Enumerate all keys in the map after a specified <code>starting_key</code> in no particular\norder.</p>\n<p>If you alter the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>() -&gt; PrefixIterator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.tuple.html\">(Key, Value)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove all elements from the map and iterate through them in no particular order.</p>\n<p>If you add elements to the map while doing this, you’ll get undefined results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>&lt;O, F&gt;(f: F)<div class=\"where\">where\n    O: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Key, O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.</p>\n<p>By returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map.</p>\n<p>NOTE: If a value fails to decode because storage is corrupted, then it will log an error and\nbe skipped in production, or panic in development.</p>\n</div></details></div></details>",0,"xcm_simulator::dmp::DownwardMessageQueues"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageEntryMetadataBuilder-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageEntryMetadataBuilder for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + StaticTypeInfo,\n    Value: FullCodec + StaticTypeInfo,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_metadata\" class=\"method trait-impl\"><a href=\"#method.build_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build_metadata</a>(\n    deprecation_status: DeprecationStatusIR,\n    docs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>&gt;,\n    entries: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageEntryMetadataIR&gt;\n)</h4></section></summary><div class='docblock'>Build into <code>entries</code> the storage metadata entries of a storage given some <code>docs</code>.</div></details></div></details>","StorageEntryMetadataBuilder","xcm_simulator::dmp::DownwardMessageQueues"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec + MaxEncodedLen,\n    Value: FullCodec + MaxEncodedLen,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","xcm_simulator::dmp::DownwardMessageQueues"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-TryDecodeEntireStorage-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; TryDecodeEntireStorage for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_decode_entire_state\" class=\"method trait-impl\"><a href=\"#method.try_decode_entire_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_decode_entire_state</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TryDecodeEntireStorageError&gt;&gt;</h4></section></summary><div class='docblock'>Decode the entire data under the given storage, returning <code>Ok(bytes_decoded)</code> if success.</div></details></div></details>","TryDecodeEntireStorage","xcm_simulator::dmp::DownwardMessageQueues"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-PartialStorageInfoTrait-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; PartialStorageInfoTrait for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"docblock\"><p>It doesn’t require to implement <code>MaxEncodedLen</code> and give no information for <code>max_size</code>.</p>\n</div><div class=\"impl-items\"><section id=\"method.partial_storage_info\" class=\"method trait-impl\"><a href=\"#method.partial_storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","PartialStorageInfoTrait","xcm_simulator::dmp::DownwardMessageQueues"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"impl\"><a href=\"#impl-StoragePrefixedMap%3CValue%3E-for-StorageMap%3CPrefix,+Hasher,+Key,+Value,+QueryKind,+OnEmpty,+MaxValues%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt; StoragePrefixedMap&lt;Value&gt; for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues&gt;<div class=\"where\">where\n    Prefix: StorageInstance,\n    Hasher: StorageHasher,\n    Key: FullCodec,\n    Value: FullCodec,\n    QueryKind: QueryKindTrait&lt;Value, OnEmpty&gt;,\n    OnEmpty: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;&lt;QueryKind as QueryKindTrait&lt;Value, OnEmpty&gt;&gt;::Query&gt; + 'static,\n    MaxValues: <a class=\"trait\" href=\"xcm_simulator/trait.Get.html\" title=\"trait xcm_simulator::Get\">Get</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.barrel_prefix\" class=\"method trait-impl\"><a href=\"#method.barrel_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">barrel_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Barrel prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_prefix\" class=\"method trait-impl\"><a href=\"#method.storage_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_prefix</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Storage prefix. Used for generating final key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_prefix\" class=\"method trait-impl\"><a href=\"#method.final_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">final_prefix</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.array.html\">32</a>]</h4></section></summary><div class='docblock'>Final full prefix that prefixes all keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_all\" class=\"method trait-impl\"><a href=\"#method.remove_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_all</a>(limit: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; KillStorageResult</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>clear</code> instead</span></div></span><div class='docblock'>Remove all values in the overlay and up to <code>limit</code> in the backend. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>, maybe_cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; MultiRemovalResults</h4></section></summary><div class='docblock'>Attempt to remove all items from the map. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method trait-impl\"><a href=\"#method.iter_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">iter_values</a>() -&gt; PrefixIterator&lt;Value&gt;</h4></section></summary><div class='docblock'>Iter over all value of the storage. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_values\" class=\"method trait-impl\"><a href=\"#method.translate_values\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">translate_values</a>&lt;OldValue, F&gt;(f: F)<div class=\"where\">where\n    OldValue: Decode,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(OldValue) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Value&gt;,</div></h4></section></summary><div class='docblock'>Translate the values of all elements by a function <code>f</code>, in the map in no particular order.\nBy returning <code>None</code> from <code>f</code> for an element, you’ll remove it from the map. <a>Read more</a></div></details></div></details>","StoragePrefixedMap<Value>","xcm_simulator::dmp::DownwardMessageQueues"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()